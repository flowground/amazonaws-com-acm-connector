{
    "openapi": "3.0.0",
    "servers": [
        {
            "url": "https://acm.amazonaws.com/"
        },
        {
            "url": "http://acm.amazonaws.com/"
        }
    ],
    "x-hasEquivalentPaths": true,
    "info": {
        "contact": {
            "email": "mike.ralphson@gmail.com",
            "name": "Mike Ralphson",
            "url": "https://github.com/mermade/aws2openapi",
            "x-twitter": "PermittedSoc"
        },
        "description": "<fullname>AWS Certificate Manager</fullname> <p>Welcome to the AWS Certificate Manager (ACM) API documentation.</p> <p>You can use ACM to manage SSL/TLS certificates for your AWS-based websites and applications. For general information about using ACM, see the <a href=\"http://docs.aws.amazon.com/acm/latest/userguide/\"> <i>AWS Certificate Manager User Guide</i> </a>.</p>",
        "license": {
            "name": "Apache 2.0 License",
            "url": "http://www.apache.org/licenses/"
        },
        "termsOfService": "https://aws.amazon.com/service-terms/",
        "title": "AWS Certificate Manager",
        "version": "2015-12-08",
        "x-apiClientRegistration": {
            "url": "https://portal.aws.amazon.com/gp/aws/developer/registration/index.html?nc2=h_ct"
        },
        "x-apisguru-categories": [
            "cloud"
        ],
        "x-logo": {
            "backgroundColor": "#FFFFFF",
            "url": "https://api.apis.guru/v2/cache/logo/https_twitter.com_awscloud_profile_image.jpeg"
        },
        "x-origin": [
            {
                "contentType": "application/json",
                "converter": {
                    "url": "https://github.com/mermade/aws2openapi",
                    "version": "1.0.0"
                },
                "url": "https://raw.githubusercontent.com/aws/aws-sdk-js/master/apis/acm-2015-12-08.normal.json",
                "x-apisguru-direct": true
            }
        ],
        "x-preferred": true,
        "x-providerName": "amazonaws.com",
        "x-release": "v4",
        "x-serviceName": "acm"
    },
    "externalDocs": {
        "description": "Amazon Web Services documentation",
        "url": "https://aws.amazon.com/acm/"
    },
    "security": [
        {
            "hmac": []
        }
    ],
    "paths": {
        "/": {
            "parameters": [
                {
                    "in": "query",
                    "name": "Action",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "query",
                    "name": "Version",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Content-Sha256",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Date",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Algorithm",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Credential",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Security-Token",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Signature",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-SignedHeaders",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                }
            ],
            "post": {
                "description": "<p>Adds one or more tags to an ACM certificate. Tags are labels that you can use to identify and organize your AWS resources. Each tag consists of a <code>key</code> and an optional <code>value</code>. You specify the certificate on input by its Amazon Resource Name (ARN). You specify the tag by using a key-value pair. </p> <p>You can apply a tag to just one certificate if you want to identify a specific characteristic of that certificate, or you can apply the same tag to multiple certificates if you want to filter for a common relationship among those certificates. Similarly, you can apply the same tag to multiple resources if you want to specify a relationship among those resources. For example, you can add the same tag to an ACM certificate and an Elastic Load Balancing load balancer to indicate that they are both used by the same website. For more information, see <a href=\"http://docs.aws.amazon.com/acm/latest/userguide/tags.html\">Tagging ACM certificates</a>. </p> <p>To remove one or more tags, use the <a>RemoveTagsFromCertificate</a> action. To view all of the tags that have been applied to the certificate, use the <a>ListTagsForCertificate</a> action. </p>",
                "operationId": "AddTagsToCertificate",
                "responses": {
                    "200": {
                        "description": "Success"
                    },
                    "480": {
                        "description": "ResourceNotFoundException",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "description": "The specified certificate cannot be found in the caller's account or the caller's account cannot be found.",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "481": {
                        "description": "InvalidArnException",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "description": "The requested Amazon Resource Name (ARN) does not refer to an existing resource.",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "482": {
                        "description": "InvalidTagException",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "description": "One or both of the values that make up the key-value pair is not valid. For example, you cannot specify a tag value that begins with <code>aws:</code>.",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "483": {
                        "description": "TooManyTagsException",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "description": "The request contains too many tags. Try the request again with fewer tags.",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "CertificateArn": {
                                        "description": "<p>String that contains the ARN of the ACM certificate to which the tag is to be applied. This must be of the form:</p> <p> <code>arn:aws:acm:region:123456789012:certificate/12345678-1234-1234-1234-123456789012</code> </p> <p>For more information about ARNs, see <a href=\"http://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html\">Amazon Resource Names (ARNs) and AWS Service Namespaces</a>. </p>",
                                        "maxLength": 2048,
                                        "minLength": 20,
                                        "pattern": "arn:[\\w+=/,.@-]+:[\\w+=/,.@-]+:[\\w+=/,.@-]*:[0-9]+:[\\w+=,.@-]+(/[\\w+=,.@-]+)*",
                                        "type": "string"
                                    },
                                    "Tags": {
                                        "description": "The key-value pair that defines the tag. The tag value is optional.",
                                        "items": {
                                            "description": "A key-value pair that identifies or specifies metadata about an ACM resource.",
                                            "properties": {
                                                "Key": {
                                                    "description": "The key of the tag.",
                                                    "maxLength": 128,
                                                    "minLength": 1,
                                                    "pattern": "[\\p{L}\\p{Z}\\p{N}_.:\\/=+\\-@]*",
                                                    "type": "string"
                                                },
                                                "Value": {
                                                    "description": "The value of the tag.",
                                                    "maxLength": 256,
                                                    "minLength": 0,
                                                    "pattern": "[\\p{L}\\p{Z}\\p{N}_.:\\/=+\\-@]*",
                                                    "type": "string"
                                                }
                                            },
                                            "required": [
                                                "Key"
                                            ],
                                            "type": "object"
                                        },
                                        "maxItems": 50,
                                        "minItems": 1,
                                        "type": "array"
                                    }
                                },
                                "required": [
                                    "CertificateArn",
                                    "Tags"
                                ],
                                "type": "object"
                            }
                        }
                    },
                    "required": true
                }
            }
        },
        "/#DeleteCertificate": {
            "parameters": [
                {
                    "in": "query",
                    "name": "Action",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "query",
                    "name": "Version",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Content-Sha256",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Date",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Algorithm",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Credential",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Security-Token",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Signature",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-SignedHeaders",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                }
            ],
            "post": {
                "description": "<p>Deletes a certificate and its associated private key. If this action succeeds, the certificate no longer appears in the list that can be displayed by calling the <a>ListCertificates</a> action or be retrieved by calling the <a>GetCertificate</a> action. The certificate will not be available for use by AWS services integrated with ACM. </p> <note> <p>You cannot delete an ACM certificate that is being used by another AWS service. To delete a certificate that is in use, the certificate association must first be removed.</p> </note>",
                "operationId": "DeleteCertificate",
                "responses": {
                    "200": {
                        "description": "Success"
                    },
                    "480": {
                        "description": "ResourceNotFoundException",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "description": "The specified certificate cannot be found in the caller's account or the caller's account cannot be found.",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "481": {
                        "description": "ResourceInUseException",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "description": "The certificate is in use by another AWS service in the caller's account. Remove the association and try again.",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "482": {
                        "description": "InvalidArnException",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "description": "The requested Amazon Resource Name (ARN) does not refer to an existing resource.",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "CertificateArn": {
                                        "description": "<p>String that contains the ARN of the ACM certificate to be deleted. This must be of the form:</p> <p> <code>arn:aws:acm:region:123456789012:certificate/12345678-1234-1234-1234-123456789012</code> </p> <p>For more information about ARNs, see <a href=\"http://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html\">Amazon Resource Names (ARNs) and AWS Service Namespaces</a>.</p>",
                                        "maxLength": 2048,
                                        "minLength": 20,
                                        "pattern": "arn:[\\w+=/,.@-]+:[\\w+=/,.@-]+:[\\w+=/,.@-]*:[0-9]+:[\\w+=,.@-]+(/[\\w+=,.@-]+)*",
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "CertificateArn"
                                ],
                                "type": "object"
                            }
                        }
                    },
                    "required": true
                }
            }
        },
        "/#DescribeCertificate": {
            "parameters": [
                {
                    "in": "query",
                    "name": "Action",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "query",
                    "name": "Version",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Content-Sha256",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Date",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Algorithm",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Credential",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Security-Token",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Signature",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-SignedHeaders",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                }
            ],
            "post": {
                "description": "Returns detailed metadata about the specified ACM certificate.",
                "operationId": "DescribeCertificate",
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "Certificate": {
                                            "description": "Metadata about an ACM certificate.",
                                            "properties": {
                                                "CertificateArn": {
                                                    "description": "The Amazon Resource Name (ARN) of the certificate. For more information about ARNs, see <a href=\"http://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html\">Amazon Resource Names (ARNs) and AWS Service Namespaces</a> in the <i>AWS General Reference</i>.",
                                                    "maxLength": 2048,
                                                    "minLength": 20,
                                                    "pattern": "arn:[\\w+=/,.@-]+:[\\w+=/,.@-]+:[\\w+=/,.@-]*:[0-9]+:[\\w+=,.@-]+(/[\\w+=,.@-]+)*",
                                                    "type": "string"
                                                },
                                                "CertificateAuthorityArn": {
                                                    "description": "<p>The Amazon Resource Name (ARN) of the ACM PCA private certificate authority (CA) that issued the certificate. This has the following format: </p> <p> <code>arn:aws:acm-pca:region:account:certificate-authority/12345678-1234-1234-1234-123456789012</code> </p>",
                                                    "maxLength": 2048,
                                                    "minLength": 20,
                                                    "pattern": "arn:[\\w+=/,.@-]+:[\\w+=/,.@-]+:[\\w+=/,.@-]*:[0-9]+:[\\w+=,.@-]+(/[\\w+=,.@-]+)*",
                                                    "type": "string"
                                                },
                                                "CreatedAt": {
                                                    "description": "The time at which the certificate was requested. This value exists only when the certificate type is <code>AMAZON_ISSUED</code>. ",
                                                    "format": "date-time",
                                                    "type": "string"
                                                },
                                                "DomainName": {
                                                    "description": "The fully qualified domain name for the certificate, such as www.example.com or example.com.",
                                                    "maxLength": 253,
                                                    "minLength": 1,
                                                    "pattern": "^(\\*\\.)?(((?!-)[A-Za-z0-9-]{0,62}[A-Za-z0-9])\\.)+((?!-)[A-Za-z0-9-]{1,62}[A-Za-z0-9])$",
                                                    "type": "string"
                                                },
                                                "DomainValidationOptions": {
                                                    "description": "Contains information about the initial validation of each domain name that occurs as a result of the <a>RequestCertificate</a> request. This field exists only when the certificate type is <code>AMAZON_ISSUED</code>. ",
                                                    "items": {
                                                        "description": "Contains information about the validation of each domain name in the certificate.",
                                                        "properties": {
                                                            "DomainName": {
                                                                "description": "A fully qualified domain name (FQDN) in the certificate. For example, <code>www.example.com</code> or <code>example.com</code>. ",
                                                                "maxLength": 253,
                                                                "minLength": 1,
                                                                "pattern": "^(\\*\\.)?(((?!-)[A-Za-z0-9-]{0,62}[A-Za-z0-9])\\.)+((?!-)[A-Za-z0-9-]{1,62}[A-Za-z0-9])$",
                                                                "type": "string"
                                                            },
                                                            "ResourceRecord": {
                                                                "description": "Contains the CNAME record that you add to your DNS database for domain validation. For more information, see <a href=\"http://docs.aws.amazon.com/acm/latest/userguide/gs-acm-validate-dns.html\">Use DNS to Validate Domain Ownership</a>.",
                                                                "properties": {
                                                                    "Name": {
                                                                        "description": "The name of the DNS record to create in your domain. This is supplied by ACM.",
                                                                        "type": "string"
                                                                    },
                                                                    "Type": {
                                                                        "description": "The type of DNS record. Currently this can be <code>CNAME</code>.",
                                                                        "enum": [
                                                                            "CNAME"
                                                                        ],
                                                                        "type": "string"
                                                                    },
                                                                    "Value": {
                                                                        "description": "The value of the CNAME record to add to your DNS database. This is supplied by ACM.",
                                                                        "type": "string"
                                                                    }
                                                                },
                                                                "required": [
                                                                    "Name",
                                                                    "Type",
                                                                    "Value"
                                                                ],
                                                                "type": "object"
                                                            },
                                                            "ValidationDomain": {
                                                                "description": "The domain name that ACM used to send domain validation emails.",
                                                                "maxLength": 253,
                                                                "minLength": 1,
                                                                "pattern": "^(\\*\\.)?(((?!-)[A-Za-z0-9-]{0,62}[A-Za-z0-9])\\.)+((?!-)[A-Za-z0-9-]{1,62}[A-Za-z0-9])$",
                                                                "type": "string"
                                                            },
                                                            "ValidationEmails": {
                                                                "description": "A list of email addresses that ACM used to send domain validation emails.",
                                                                "items": {
                                                                    "type": "string"
                                                                },
                                                                "type": "array"
                                                            },
                                                            "ValidationMethod": {
                                                                "description": "Specifies the domain validation method.",
                                                                "enum": [
                                                                    "EMAIL",
                                                                    "DNS"
                                                                ],
                                                                "type": "string"
                                                            },
                                                            "ValidationStatus": {
                                                                "description": "<p>The validation status of the domain name. This can be one of the following values:</p> <ul> <li> <p> <code>PENDING_VALIDATION</code> </p> </li> <li> <p> <code/>SUCCESS</p> </li> <li> <p> <code/>FAILED</p> </li> </ul>",
                                                                "enum": [
                                                                    "PENDING_VALIDATION",
                                                                    "SUCCESS",
                                                                    "FAILED"
                                                                ],
                                                                "type": "string"
                                                            }
                                                        },
                                                        "required": [
                                                            "DomainName"
                                                        ],
                                                        "type": "object"
                                                    },
                                                    "maxItems": 1000,
                                                    "minItems": 1,
                                                    "type": "array"
                                                },
                                                "ExtendedKeyUsages": {
                                                    "description": "Contains a list of Extended Key Usage X.509 v3 extension objects. Each object specifies a purpose for which the certificate public key can be used and consists of a name and an object identifier (OID). ",
                                                    "items": {
                                                        "description": "The Extended Key Usage X.509 v3 extension defines one or more purposes for which the public key can be used. This is in addition to or in place of the basic purposes specified by the Key Usage extension. ",
                                                        "properties": {
                                                            "Name": {
                                                                "description": "The name of an Extended Key Usage value.",
                                                                "enum": [
                                                                    "TLS_WEB_SERVER_AUTHENTICATION",
                                                                    "TLS_WEB_CLIENT_AUTHENTICATION",
                                                                    "CODE_SIGNING",
                                                                    "EMAIL_PROTECTION",
                                                                    "TIME_STAMPING",
                                                                    "OCSP_SIGNING",
                                                                    "IPSEC_END_SYSTEM",
                                                                    "IPSEC_TUNNEL",
                                                                    "IPSEC_USER",
                                                                    "ANY",
                                                                    "NONE",
                                                                    "CUSTOM"
                                                                ],
                                                                "type": "string"
                                                            },
                                                            "OID": {
                                                                "description": "<p>An object identifier (OID) for the extension value. OIDs are strings of numbers separated by periods. The following OIDs are defined in RFC 3280 and RFC 5280. </p> <ul> <li> <p> <code>1.3.6.1.5.5.7.3.1 (TLS_WEB_SERVER_AUTHENTICATION)</code> </p> </li> <li> <p> <code>1.3.6.1.5.5.7.3.2 (TLS_WEB_CLIENT_AUTHENTICATION)</code> </p> </li> <li> <p> <code>1.3.6.1.5.5.7.3.3 (CODE_SIGNING)</code> </p> </li> <li> <p> <code>1.3.6.1.5.5.7.3.4 (EMAIL_PROTECTION)</code> </p> </li> <li> <p> <code>1.3.6.1.5.5.7.3.8 (TIME_STAMPING)</code> </p> </li> <li> <p> <code>1.3.6.1.5.5.7.3.9 (OCSP_SIGNING)</code> </p> </li> <li> <p> <code>1.3.6.1.5.5.7.3.5 (IPSEC_END_SYSTEM)</code> </p> </li> <li> <p> <code>1.3.6.1.5.5.7.3.6 (IPSEC_TUNNEL)</code> </p> </li> <li> <p> <code>1.3.6.1.5.5.7.3.7 (IPSEC_USER)</code> </p> </li> </ul>",
                                                                "type": "string"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "type": "array"
                                                },
                                                "FailureReason": {
                                                    "description": "The reason the certificate request failed. This value exists only when the certificate status is <code>FAILED</code>. For more information, see <a href=\"http://docs.aws.amazon.com/acm/latest/userguide/troubleshooting.html#troubleshooting-failed\">Certificate Request Failed</a> in the <i>AWS Certificate Manager User Guide</i>. ",
                                                    "enum": [
                                                        "NO_AVAILABLE_CONTACTS",
                                                        "ADDITIONAL_VERIFICATION_REQUIRED",
                                                        "DOMAIN_NOT_ALLOWED",
                                                        "INVALID_PUBLIC_DOMAIN",
                                                        "CAA_ERROR",
                                                        "PCA_LIMIT_EXCEEDED",
                                                        "PCA_INVALID_ARN",
                                                        "PCA_INVALID_STATE",
                                                        "PCA_REQUEST_FAILED",
                                                        "PCA_RESOURCE_NOT_FOUND",
                                                        "PCA_INVALID_ARGS",
                                                        "OTHER"
                                                    ],
                                                    "type": "string"
                                                },
                                                "ImportedAt": {
                                                    "description": "The date and time at which the certificate was imported. This value exists only when the certificate type is <code>IMPORTED</code>. ",
                                                    "format": "date-time",
                                                    "type": "string"
                                                },
                                                "InUseBy": {
                                                    "description": "A list of ARNs for the AWS resources that are using the certificate. A certificate can be used by multiple AWS resources. ",
                                                    "items": {
                                                        "type": "string"
                                                    },
                                                    "type": "array"
                                                },
                                                "IssuedAt": {
                                                    "description": "The time at which the certificate was issued. This value exists only when the certificate type is <code>AMAZON_ISSUED</code>. ",
                                                    "format": "date-time",
                                                    "type": "string"
                                                },
                                                "Issuer": {
                                                    "description": "The name of the certificate authority that issued and signed the certificate.",
                                                    "type": "string"
                                                },
                                                "KeyAlgorithm": {
                                                    "description": "The algorithm that was used to generate the public-private key pair.",
                                                    "enum": [
                                                        "RSA_2048",
                                                        "RSA_1024",
                                                        "RSA_4096",
                                                        "EC_prime256v1",
                                                        "EC_secp384r1",
                                                        "EC_secp521r1"
                                                    ],
                                                    "type": "string"
                                                },
                                                "KeyUsages": {
                                                    "description": "A list of Key Usage X.509 v3 extension objects. Each object is a string value that identifies the purpose of the public key contained in the certificate. Possible extension values include DIGITAL_SIGNATURE, KEY_ENCHIPHERMENT, NON_REPUDIATION, and more.",
                                                    "items": {
                                                        "description": "The Key Usage X.509 v3 extension defines the purpose of the public key contained in the certificate.",
                                                        "properties": {
                                                            "Name": {
                                                                "description": "A string value that contains a Key Usage extension name.",
                                                                "enum": [
                                                                    "DIGITAL_SIGNATURE",
                                                                    "NON_REPUDIATION",
                                                                    "KEY_ENCIPHERMENT",
                                                                    "DATA_ENCIPHERMENT",
                                                                    "KEY_AGREEMENT",
                                                                    "CERTIFICATE_SIGNING",
                                                                    "CRL_SIGNING",
                                                                    "ENCIPHER_ONLY",
                                                                    "DECIPHER_ONLY",
                                                                    "ANY",
                                                                    "CUSTOM"
                                                                ],
                                                                "type": "string"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "type": "array"
                                                },
                                                "NotAfter": {
                                                    "description": "The time after which the certificate is not valid.",
                                                    "format": "date-time",
                                                    "type": "string"
                                                },
                                                "NotBefore": {
                                                    "description": "The time before which the certificate is not valid.",
                                                    "format": "date-time",
                                                    "type": "string"
                                                },
                                                "Options": {
                                                    "description": "Value that specifies whether to add the certificate to a transparency log. Certificate transparency makes it possible to detect SSL certificates that have been mistakenly or maliciously issued. A browser might respond to certificate that has not been logged by showing an error message. The logs are cryptographically secure. ",
                                                    "properties": {
                                                        "CertificateTransparencyLoggingPreference": {
                                                            "description": "You can opt out of certificate transparency logging by specifying the <code>DISABLED</code> option. Opt in by specifying <code>ENABLED</code>. ",
                                                            "enum": [
                                                                "ENABLED",
                                                                "DISABLED"
                                                            ],
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "RenewalEligibility": {
                                                    "description": "Specifies whether the certificate is eligible for renewal.",
                                                    "enum": [
                                                        "ELIGIBLE",
                                                        "INELIGIBLE"
                                                    ],
                                                    "type": "string"
                                                },
                                                "RenewalSummary": {
                                                    "description": "Contains information about the status of ACM's <a href=\"http://docs.aws.amazon.com/acm/latest/userguide/acm-renewal.html\">managed renewal</a> for the certificate. This field exists only when the certificate type is <code>AMAZON_ISSUED</code>.",
                                                    "properties": {
                                                        "DomainValidationOptions": {
                                                            "description": "Contains information about the validation of each domain name in the certificate, as it pertains to ACM's <a href=\"http://docs.aws.amazon.com/acm/latest/userguide/acm-renewal.html\">managed renewal</a>. This is different from the initial validation that occurs as a result of the <a>RequestCertificate</a> request. This field exists only when the certificate type is <code>AMAZON_ISSUED</code>.",
                                                            "items": {
                                                                "description": "Contains information about the validation of each domain name in the certificate.",
                                                                "properties": {
                                                                    "DomainName": {
                                                                        "description": "A fully qualified domain name (FQDN) in the certificate. For example, <code>www.example.com</code> or <code>example.com</code>. ",
                                                                        "maxLength": 253,
                                                                        "minLength": 1,
                                                                        "pattern": "^(\\*\\.)?(((?!-)[A-Za-z0-9-]{0,62}[A-Za-z0-9])\\.)+((?!-)[A-Za-z0-9-]{1,62}[A-Za-z0-9])$",
                                                                        "type": "string"
                                                                    },
                                                                    "ResourceRecord": {
                                                                        "description": "Contains the CNAME record that you add to your DNS database for domain validation. For more information, see <a href=\"http://docs.aws.amazon.com/acm/latest/userguide/gs-acm-validate-dns.html\">Use DNS to Validate Domain Ownership</a>.",
                                                                        "properties": {
                                                                            "Name": {
                                                                                "description": "The name of the DNS record to create in your domain. This is supplied by ACM.",
                                                                                "type": "string"
                                                                            },
                                                                            "Type": {
                                                                                "description": "The type of DNS record. Currently this can be <code>CNAME</code>.",
                                                                                "enum": [
                                                                                    "CNAME"
                                                                                ],
                                                                                "type": "string"
                                                                            },
                                                                            "Value": {
                                                                                "description": "The value of the CNAME record to add to your DNS database. This is supplied by ACM.",
                                                                                "type": "string"
                                                                            }
                                                                        },
                                                                        "required": [
                                                                            "Name",
                                                                            "Type",
                                                                            "Value"
                                                                        ],
                                                                        "type": "object"
                                                                    },
                                                                    "ValidationDomain": {
                                                                        "description": "The domain name that ACM used to send domain validation emails.",
                                                                        "maxLength": 253,
                                                                        "minLength": 1,
                                                                        "pattern": "^(\\*\\.)?(((?!-)[A-Za-z0-9-]{0,62}[A-Za-z0-9])\\.)+((?!-)[A-Za-z0-9-]{1,62}[A-Za-z0-9])$",
                                                                        "type": "string"
                                                                    },
                                                                    "ValidationEmails": {
                                                                        "description": "A list of email addresses that ACM used to send domain validation emails.",
                                                                        "items": {
                                                                            "type": "string"
                                                                        },
                                                                        "type": "array"
                                                                    },
                                                                    "ValidationMethod": {
                                                                        "description": "Specifies the domain validation method.",
                                                                        "enum": [
                                                                            "EMAIL",
                                                                            "DNS"
                                                                        ],
                                                                        "type": "string"
                                                                    },
                                                                    "ValidationStatus": {
                                                                        "description": "<p>The validation status of the domain name. This can be one of the following values:</p> <ul> <li> <p> <code>PENDING_VALIDATION</code> </p> </li> <li> <p> <code/>SUCCESS</p> </li> <li> <p> <code/>FAILED</p> </li> </ul>",
                                                                        "enum": [
                                                                            "PENDING_VALIDATION",
                                                                            "SUCCESS",
                                                                            "FAILED"
                                                                        ],
                                                                        "type": "string"
                                                                    }
                                                                },
                                                                "required": [
                                                                    "DomainName"
                                                                ],
                                                                "type": "object"
                                                            },
                                                            "maxItems": 1000,
                                                            "minItems": 1,
                                                            "type": "array"
                                                        },
                                                        "RenewalStatus": {
                                                            "description": "The status of ACM's <a href=\"http://docs.aws.amazon.com/acm/latest/userguide/acm-renewal.html\">managed renewal</a> of the certificate.",
                                                            "enum": [
                                                                "PENDING_AUTO_RENEWAL",
                                                                "PENDING_VALIDATION",
                                                                "SUCCESS",
                                                                "FAILED"
                                                            ],
                                                            "type": "string"
                                                        }
                                                    },
                                                    "required": [
                                                        "RenewalStatus",
                                                        "DomainValidationOptions"
                                                    ],
                                                    "type": "object"
                                                },
                                                "RevocationReason": {
                                                    "description": "The reason the certificate was revoked. This value exists only when the certificate status is <code>REVOKED</code>. ",
                                                    "enum": [
                                                        "UNSPECIFIED",
                                                        "KEY_COMPROMISE",
                                                        "CA_COMPROMISE",
                                                        "AFFILIATION_CHANGED",
                                                        "SUPERCEDED",
                                                        "CESSATION_OF_OPERATION",
                                                        "CERTIFICATE_HOLD",
                                                        "REMOVE_FROM_CRL",
                                                        "PRIVILEGE_WITHDRAWN",
                                                        "A_A_COMPROMISE"
                                                    ],
                                                    "type": "string"
                                                },
                                                "RevokedAt": {
                                                    "description": "The time at which the certificate was revoked. This value exists only when the certificate status is <code>REVOKED</code>. ",
                                                    "format": "date-time",
                                                    "type": "string"
                                                },
                                                "Serial": {
                                                    "description": "The serial number of the certificate.",
                                                    "type": "string"
                                                },
                                                "SignatureAlgorithm": {
                                                    "description": "The algorithm that was used to sign the certificate.",
                                                    "type": "string"
                                                },
                                                "Status": {
                                                    "description": "The status of the certificate.",
                                                    "enum": [
                                                        "PENDING_VALIDATION",
                                                        "ISSUED",
                                                        "INACTIVE",
                                                        "EXPIRED",
                                                        "VALIDATION_TIMED_OUT",
                                                        "REVOKED",
                                                        "FAILED"
                                                    ],
                                                    "type": "string"
                                                },
                                                "Subject": {
                                                    "description": "The name of the entity that is associated with the public key contained in the certificate.",
                                                    "type": "string"
                                                },
                                                "SubjectAlternativeNames": {
                                                    "description": "One or more domain names (subject alternative names) included in the certificate. This list contains the domain names that are bound to the public key that is contained in the certificate. The subject alternative names include the canonical domain name (CN) of the certificate and additional domain names that can be used to connect to the website. ",
                                                    "items": {
                                                        "maxLength": 253,
                                                        "minLength": 1,
                                                        "pattern": "^(\\*\\.)?(((?!-)[A-Za-z0-9-]{0,62}[A-Za-z0-9])\\.)+((?!-)[A-Za-z0-9-]{1,62}[A-Za-z0-9])$",
                                                        "type": "string"
                                                    },
                                                    "maxItems": 100,
                                                    "minItems": 1,
                                                    "type": "array"
                                                },
                                                "Type": {
                                                    "description": "The source of the certificate. For certificates provided by ACM, this value is <code>AMAZON_ISSUED</code>. For certificates that you imported with <a>ImportCertificate</a>, this value is <code>IMPORTED</code>. ACM does not provide <a href=\"http://docs.aws.amazon.com/acm/latest/userguide/acm-renewal.html\">managed renewal</a> for imported certificates. For more information about the differences between certificates that you import and those that ACM provides, see <a href=\"http://docs.aws.amazon.com/acm/latest/userguide/import-certificate.html\">Importing Certificates</a> in the <i>AWS Certificate Manager User Guide</i>. ",
                                                    "enum": [
                                                        "IMPORTED",
                                                        "AMAZON_ISSUED",
                                                        "PRIVATE"
                                                    ],
                                                    "type": "string"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "480": {
                        "description": "ResourceNotFoundException",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "description": "The specified certificate cannot be found in the caller's account or the caller's account cannot be found.",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "481": {
                        "description": "InvalidArnException",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "description": "The requested Amazon Resource Name (ARN) does not refer to an existing resource.",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "CertificateArn": {
                                        "description": "<p>The Amazon Resource Name (ARN) of the ACM certificate. The ARN must have the following form:</p> <p> <code>arn:aws:acm:region:123456789012:certificate/12345678-1234-1234-1234-123456789012</code> </p> <p>For more information about ARNs, see <a href=\"http://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html\">Amazon Resource Names (ARNs) and AWS Service Namespaces</a>.</p>",
                                        "maxLength": 2048,
                                        "minLength": 20,
                                        "pattern": "arn:[\\w+=/,.@-]+:[\\w+=/,.@-]+:[\\w+=/,.@-]*:[0-9]+:[\\w+=,.@-]+(/[\\w+=,.@-]+)*",
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "CertificateArn"
                                ],
                                "type": "object"
                            }
                        }
                    },
                    "required": true
                }
            }
        },
        "/#ExportCertificate": {
            "parameters": [
                {
                    "in": "query",
                    "name": "Action",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "query",
                    "name": "Version",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Content-Sha256",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Date",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Algorithm",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Credential",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Security-Token",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Signature",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-SignedHeaders",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                }
            ],
            "post": {
                "description": "<p>Exports a private certificate issued by a private certificate authority (CA) for use anywhere. You can export the certificate, the certificate chain, and the encrypted private key associated with the public key embedded in the certificate. You must store the private key securely. The private key is a 2048 bit RSA key. You must provide a passphrase for the private key when exporting it. You can use the following OpenSSL command to decrypt it later. Provide the passphrase when prompted. </p> <p> <code>openssl rsa -in encrypted_key.pem -out decrypted_key.pem</code> </p>",
                "operationId": "ExportCertificate",
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "Certificate": {
                                            "description": "The base64 PEM-encoded certificate.",
                                            "maxLength": 32768,
                                            "minLength": 1,
                                            "pattern": "-{5}BEGIN CERTIFICATE-{5}\\u000D?\\u000A([A-Za-z0-9/+]{64}\\u000D?\\u000A)*[A-Za-z0-9/+]{1,64}={0,2}\\u000D?\\u000A-{5}END CERTIFICATE-{5}(\\u000D?\\u000A)?",
                                            "type": "string"
                                        },
                                        "CertificateChain": {
                                            "description": "The base64 PEM-encoded certificate chain. This does not include the certificate that you are exporting.",
                                            "maxLength": 2097152,
                                            "minLength": 1,
                                            "pattern": "(-{5}BEGIN CERTIFICATE-{5}\\u000D?\\u000A([A-Za-z0-9/+]{64}\\u000D?\\u000A)*[A-Za-z0-9/+]{1,64}={0,2}\\u000D?\\u000A-{5}END CERTIFICATE-{5}\\u000D?\\u000A)*-{5}BEGIN CERTIFICATE-{5}\\u000D?\\u000A([A-Za-z0-9/+]{64}\\u000D?\\u000A)*[A-Za-z0-9/+]{1,64}={0,2}\\u000D?\\u000A-{5}END CERTIFICATE-{5}(\\u000D?\\u000A)?",
                                            "type": "string"
                                        },
                                        "PrivateKey": {
                                            "description": "The PEM-encoded private key associated with the public key in the certificate.",
                                            "format": "password",
                                            "maxLength": 524288,
                                            "minLength": 1,
                                            "pattern": "-{5}BEGIN PRIVATE KEY-{5}\\u000D?\\u000A([A-Za-z0-9/+]{64}\\u000D?\\u000A)*[A-Za-z0-9/+]{1,64}={0,2}\\u000D?\\u000A-{5}END PRIVATE KEY-{5}(\\u000D?\\u000A)?",
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "480": {
                        "description": "ResourceNotFoundException",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "description": "The specified certificate cannot be found in the caller's account or the caller's account cannot be found.",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "481": {
                        "description": "RequestInProgressException",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "description": "The certificate request is in process and the certificate in your account has not yet been issued.",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "482": {
                        "description": "InvalidArnException",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "description": "The requested Amazon Resource Name (ARN) does not refer to an existing resource.",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "CertificateArn": {
                                        "description": "<p>An Amazon Resource Name (ARN) of the issued certificate. This must be of the form:</p> <p> <code>arn:aws:acm:region:account:certificate/12345678-1234-1234-1234-123456789012</code> </p>",
                                        "maxLength": 2048,
                                        "minLength": 20,
                                        "pattern": "arn:[\\w+=/,.@-]+:[\\w+=/,.@-]+:[\\w+=/,.@-]*:[0-9]+:[\\w+=,.@-]+(/[\\w+=,.@-]+)*",
                                        "type": "string"
                                    },
                                    "Passphrase": {
                                        "description": "<p>Passphrase to associate with the encrypted exported private key. If you want to later decrypt the private key, you must have the passphrase. You can use the following OpenSSL command to decrypt a private key: </p> <p> <code>openssl rsa -in encrypted_key.pem -out decrypted_key.pem</code> </p>",
                                        "format": "password",
                                        "maxLength": 128,
                                        "minLength": 4,
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "CertificateArn",
                                    "Passphrase"
                                ],
                                "type": "object"
                            }
                        }
                    },
                    "required": true
                }
            }
        },
        "/#GetCertificate": {
            "parameters": [
                {
                    "in": "query",
                    "name": "Action",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "query",
                    "name": "Version",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Content-Sha256",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Date",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Algorithm",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Credential",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Security-Token",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Signature",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-SignedHeaders",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                }
            ],
            "post": {
                "description": "Retrieves a certificate specified by an ARN and its certificate chain . The chain is an ordered list of certificates that contains the end entity certificate, intermediate certificates of subordinate CAs, and the root certificate in that order. The certificate and certificate chain are base64 encoded. If you want to decode the certificate to see the individual fields, you can use OpenSSL.",
                "operationId": "GetCertificate",
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "Certificate": {
                                            "description": "String that contains the ACM certificate represented by the ARN specified at input.",
                                            "maxLength": 32768,
                                            "minLength": 1,
                                            "pattern": "-{5}BEGIN CERTIFICATE-{5}\\u000D?\\u000A([A-Za-z0-9/+]{64}\\u000D?\\u000A)*[A-Za-z0-9/+]{1,64}={0,2}\\u000D?\\u000A-{5}END CERTIFICATE-{5}(\\u000D?\\u000A)?",
                                            "type": "string"
                                        },
                                        "CertificateChain": {
                                            "description": "The certificate chain that contains the root certificate issued by the certificate authority (CA).",
                                            "maxLength": 2097152,
                                            "minLength": 1,
                                            "pattern": "(-{5}BEGIN CERTIFICATE-{5}\\u000D?\\u000A([A-Za-z0-9/+]{64}\\u000D?\\u000A)*[A-Za-z0-9/+]{1,64}={0,2}\\u000D?\\u000A-{5}END CERTIFICATE-{5}\\u000D?\\u000A)*-{5}BEGIN CERTIFICATE-{5}\\u000D?\\u000A([A-Za-z0-9/+]{64}\\u000D?\\u000A)*[A-Za-z0-9/+]{1,64}={0,2}\\u000D?\\u000A-{5}END CERTIFICATE-{5}(\\u000D?\\u000A)?",
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "480": {
                        "description": "ResourceNotFoundException",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "description": "The specified certificate cannot be found in the caller's account or the caller's account cannot be found.",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "481": {
                        "description": "RequestInProgressException",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "description": "The certificate request is in process and the certificate in your account has not yet been issued.",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "482": {
                        "description": "InvalidArnException",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "description": "The requested Amazon Resource Name (ARN) does not refer to an existing resource.",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "CertificateArn": {
                                        "description": "<p>String that contains a certificate ARN in the following format:</p> <p> <code>arn:aws:acm:region:123456789012:certificate/12345678-1234-1234-1234-123456789012</code> </p> <p>For more information about ARNs, see <a href=\"http://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html\">Amazon Resource Names (ARNs) and AWS Service Namespaces</a>.</p>",
                                        "maxLength": 2048,
                                        "minLength": 20,
                                        "pattern": "arn:[\\w+=/,.@-]+:[\\w+=/,.@-]+:[\\w+=/,.@-]*:[0-9]+:[\\w+=,.@-]+(/[\\w+=,.@-]+)*",
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "CertificateArn"
                                ],
                                "type": "object"
                            }
                        }
                    },
                    "required": true
                }
            }
        },
        "/#ImportCertificate": {
            "parameters": [
                {
                    "in": "query",
                    "name": "Action",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "query",
                    "name": "Version",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Content-Sha256",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Date",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Algorithm",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Credential",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Security-Token",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Signature",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-SignedHeaders",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                }
            ],
            "post": {
                "description": "<p>Imports a certificate into AWS Certificate Manager (ACM) to use with services that are integrated with ACM. Note that <a href=\"http://docs.aws.amazon.com/acm/latest/userguide/acm-services.html\">integrated services</a> allow only certificate types and keys they support to be associated with their resources. Further, their support differs depending on whether the certificate is imported into IAM or into ACM. For more information, see the documentation for each service. For more information about importing certificates into ACM, see <a href=\"http://docs.aws.amazon.com/acm/latest/userguide/import-certificate.html\">Importing Certificates</a> in the <i>AWS Certificate Manager User Guide</i>. </p> <note> <p>ACM does not provide <a href=\"http://docs.aws.amazon.com/acm/latest/userguide/acm-renewal.html\">managed renewal</a> for certificates that you import.</p> </note> <p>Note the following guidelines when importing third party certificates:</p> <ul> <li> <p>You must enter the private key that matches the certificate you are importing.</p> </li> <li> <p>The private key must be unencrypted. You cannot import a private key that is protected by a password or a passphrase.</p> </li> <li> <p>If the certificate you are importing is not self-signed, you must enter its certificate chain.</p> </li> <li> <p>If a certificate chain is included, the issuer must be the subject of one of the certificates in the chain.</p> </li> <li> <p>The certificate, private key, and certificate chain must be PEM-encoded.</p> </li> <li> <p>The current time must be between the <code>Not Before</code> and <code>Not After</code> certificate fields.</p> </li> <li> <p>The <code>Issuer</code> field must not be empty.</p> </li> <li> <p>The OCSP authority URL, if present, must not exceed 1000 characters.</p> </li> <li> <p>To import a new certificate, omit the <code>CertificateArn</code> argument. Include this argument only when you want to replace a previously imported certificate.</p> </li> <li> <p>When you import a certificate by using the CLI, you must specify the certificate, the certificate chain, and the private key by their file names preceded by <code>file://</code>. For example, you can specify a certificate saved in the <code>C:\\temp</code> folder as <code>file://C:\\temp\\certificate_to_import.pem</code>. If you are making an HTTP or HTTPS Query request, include these arguments as BLOBs. </p> </li> <li> <p>When you import a certificate by using an SDK, you must specify the certificate, the certificate chain, and the private key files in the manner required by the programming language you're using. </p> </li> </ul> <p>This operation returns the <a href=\"http://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html\">Amazon Resource Name (ARN)</a> of the imported certificate.</p>",
                "operationId": "ImportCertificate",
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "CertificateArn": {
                                            "description": "The <a href=\"http://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html\">Amazon Resource Name (ARN)</a> of the imported certificate.",
                                            "maxLength": 2048,
                                            "minLength": 20,
                                            "pattern": "arn:[\\w+=/,.@-]+:[\\w+=/,.@-]+:[\\w+=/,.@-]*:[0-9]+:[\\w+=,.@-]+(/[\\w+=,.@-]+)*",
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "480": {
                        "description": "ResourceNotFoundException",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "description": "The specified certificate cannot be found in the caller's account or the caller's account cannot be found.",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "481": {
                        "description": "LimitExceededException",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "description": "An ACM limit has been exceeded.",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "Certificate": {
                                        "description": "The certificate to import.",
                                        "maxLength": 32768,
                                        "minLength": 1,
                                        "type": "string"
                                    },
                                    "CertificateArn": {
                                        "description": "The <a href=\"http://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html\">Amazon Resource Name (ARN)</a> of an imported certificate to replace. To import a new certificate, omit this field. ",
                                        "maxLength": 2048,
                                        "minLength": 20,
                                        "pattern": "arn:[\\w+=/,.@-]+:[\\w+=/,.@-]+:[\\w+=/,.@-]*:[0-9]+:[\\w+=,.@-]+(/[\\w+=,.@-]+)*",
                                        "type": "string"
                                    },
                                    "CertificateChain": {
                                        "description": "The PEM encoded certificate chain.",
                                        "maxLength": 2097152,
                                        "minLength": 1,
                                        "type": "string"
                                    },
                                    "PrivateKey": {
                                        "description": "The private key that matches the public key in the certificate.",
                                        "format": "password",
                                        "maxLength": 524288,
                                        "minLength": 1,
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "Certificate",
                                    "PrivateKey"
                                ],
                                "type": "object"
                            }
                        }
                    },
                    "required": true
                }
            }
        },
        "/#ListCertificates": {
            "parameters": [
                {
                    "in": "query",
                    "name": "Action",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "query",
                    "name": "Version",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Content-Sha256",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Date",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Algorithm",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Credential",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Security-Token",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Signature",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-SignedHeaders",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                }
            ],
            "post": {
                "description": "Retrieves a list of certificate ARNs and domain names. You can request that only certificates that match a specific status be listed. You can also filter by specific attributes of the certificate. ",
                "operationId": "ListCertificates",
                "parameters": [
                    {
                        "description": "Pagination limit",
                        "in": "query",
                        "name": "MaxItems",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Pagination token",
                        "in": "query",
                        "name": "NextToken",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "CertificateSummaryList": {
                                            "description": "A list of ACM certificates.",
                                            "items": {
                                                "description": "This structure is returned in the response object of <a>ListCertificates</a> action. ",
                                                "properties": {
                                                    "CertificateArn": {
                                                        "description": "<p>Amazon Resource Name (ARN) of the certificate. This is of the form:</p> <p> <code>arn:aws:acm:region:123456789012:certificate/12345678-1234-1234-1234-123456789012</code> </p> <p>For more information about ARNs, see <a href=\"http://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html\">Amazon Resource Names (ARNs) and AWS Service Namespaces</a>. </p>",
                                                        "maxLength": 2048,
                                                        "minLength": 20,
                                                        "pattern": "arn:[\\w+=/,.@-]+:[\\w+=/,.@-]+:[\\w+=/,.@-]*:[0-9]+:[\\w+=,.@-]+(/[\\w+=,.@-]+)*",
                                                        "type": "string"
                                                    },
                                                    "DomainName": {
                                                        "description": "Fully qualified domain name (FQDN), such as www.example.com or example.com, for the certificate.",
                                                        "maxLength": 253,
                                                        "minLength": 1,
                                                        "pattern": "^(\\*\\.)?(((?!-)[A-Za-z0-9-]{0,62}[A-Za-z0-9])\\.)+((?!-)[A-Za-z0-9-]{1,62}[A-Za-z0-9])$",
                                                        "type": "string"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "type": "array"
                                        },
                                        "NextToken": {
                                            "description": "When the list is truncated, this value is present and contains the value to use for the <code>NextToken</code> parameter in a subsequent pagination request.",
                                            "maxLength": 320,
                                            "minLength": 1,
                                            "pattern": "[\\u0009\\u000A\\u000D\\u0020-\\u00FF]*",
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "CertificateStatuses": {
                                        "description": "Filter the certificate list by status value.",
                                        "items": {
                                            "enum": [
                                                "PENDING_VALIDATION",
                                                "ISSUED",
                                                "INACTIVE",
                                                "EXPIRED",
                                                "VALIDATION_TIMED_OUT",
                                                "REVOKED",
                                                "FAILED"
                                            ],
                                            "type": "string"
                                        },
                                        "type": "array"
                                    },
                                    "Includes": {
                                        "description": "Filter the certificate list. For more information, see the <a>Filters</a> structure.",
                                        "properties": {
                                            "extendedKeyUsage": {
                                                "description": "Specify one or more <a>ExtendedKeyUsage</a> extension values.",
                                                "items": {
                                                    "enum": [
                                                        "TLS_WEB_SERVER_AUTHENTICATION",
                                                        "TLS_WEB_CLIENT_AUTHENTICATION",
                                                        "CODE_SIGNING",
                                                        "EMAIL_PROTECTION",
                                                        "TIME_STAMPING",
                                                        "OCSP_SIGNING",
                                                        "IPSEC_END_SYSTEM",
                                                        "IPSEC_TUNNEL",
                                                        "IPSEC_USER",
                                                        "ANY",
                                                        "NONE",
                                                        "CUSTOM"
                                                    ],
                                                    "type": "string"
                                                },
                                                "type": "array"
                                            },
                                            "keyTypes": {
                                                "description": "Specify one or more algorithms that can be used to generate key pairs.",
                                                "items": {
                                                    "enum": [
                                                        "RSA_2048",
                                                        "RSA_1024",
                                                        "RSA_4096",
                                                        "EC_prime256v1",
                                                        "EC_secp384r1",
                                                        "EC_secp521r1"
                                                    ],
                                                    "type": "string"
                                                },
                                                "type": "array"
                                            },
                                            "keyUsage": {
                                                "description": "Specify one or more <a>KeyUsage</a> extension values.",
                                                "items": {
                                                    "enum": [
                                                        "DIGITAL_SIGNATURE",
                                                        "NON_REPUDIATION",
                                                        "KEY_ENCIPHERMENT",
                                                        "DATA_ENCIPHERMENT",
                                                        "KEY_AGREEMENT",
                                                        "CERTIFICATE_SIGNING",
                                                        "CRL_SIGNING",
                                                        "ENCIPHER_ONLY",
                                                        "DECIPHER_ONLY",
                                                        "ANY",
                                                        "CUSTOM"
                                                    ],
                                                    "type": "string"
                                                },
                                                "type": "array"
                                            }
                                        },
                                        "type": "object"
                                    },
                                    "MaxItems": {
                                        "description": "Use this parameter when paginating results to specify the maximum number of items to return in the response. If additional items exist beyond the number you specify, the <code>NextToken</code> element is sent in the response. Use this <code>NextToken</code> value in a subsequent request to retrieve additional items.",
                                        "maximum": 1000,
                                        "minimum": 1,
                                        "type": "integer"
                                    },
                                    "NextToken": {
                                        "description": "Use this parameter only when paginating results and only in a subsequent request after you receive a response with truncated results. Set it to the value of <code>NextToken</code> from the response you just received.",
                                        "maxLength": 320,
                                        "minLength": 1,
                                        "pattern": "[\\u0009\\u000A\\u000D\\u0020-\\u00FF]*",
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    },
                    "required": true
                }
            }
        },
        "/#ListTagsForCertificate": {
            "parameters": [
                {
                    "in": "query",
                    "name": "Action",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "query",
                    "name": "Version",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Content-Sha256",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Date",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Algorithm",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Credential",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Security-Token",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Signature",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-SignedHeaders",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                }
            ],
            "post": {
                "description": "Lists the tags that have been applied to the ACM certificate. Use the certificate's Amazon Resource Name (ARN) to specify the certificate. To add a tag to an ACM certificate, use the <a>AddTagsToCertificate</a> action. To delete a tag, use the <a>RemoveTagsFromCertificate</a> action. ",
                "operationId": "ListTagsForCertificate",
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "Tags": {
                                            "description": "The key-value pairs that define the applied tags.",
                                            "items": {
                                                "description": "A key-value pair that identifies or specifies metadata about an ACM resource.",
                                                "properties": {
                                                    "Key": {
                                                        "description": "The key of the tag.",
                                                        "maxLength": 128,
                                                        "minLength": 1,
                                                        "pattern": "[\\p{L}\\p{Z}\\p{N}_.:\\/=+\\-@]*",
                                                        "type": "string"
                                                    },
                                                    "Value": {
                                                        "description": "The value of the tag.",
                                                        "maxLength": 256,
                                                        "minLength": 0,
                                                        "pattern": "[\\p{L}\\p{Z}\\p{N}_.:\\/=+\\-@]*",
                                                        "type": "string"
                                                    }
                                                },
                                                "required": [
                                                    "Key"
                                                ],
                                                "type": "object"
                                            },
                                            "maxItems": 50,
                                            "minItems": 1,
                                            "type": "array"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "480": {
                        "description": "ResourceNotFoundException",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "description": "The specified certificate cannot be found in the caller's account or the caller's account cannot be found.",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "481": {
                        "description": "InvalidArnException",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "description": "The requested Amazon Resource Name (ARN) does not refer to an existing resource.",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "CertificateArn": {
                                        "description": "<p>String that contains the ARN of the ACM certificate for which you want to list the tags. This must have the following form:</p> <p> <code>arn:aws:acm:region:123456789012:certificate/12345678-1234-1234-1234-123456789012</code> </p> <p>For more information about ARNs, see <a href=\"http://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html\">Amazon Resource Names (ARNs) and AWS Service Namespaces</a>. </p>",
                                        "maxLength": 2048,
                                        "minLength": 20,
                                        "pattern": "arn:[\\w+=/,.@-]+:[\\w+=/,.@-]+:[\\w+=/,.@-]*:[0-9]+:[\\w+=,.@-]+(/[\\w+=,.@-]+)*",
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "CertificateArn"
                                ],
                                "type": "object"
                            }
                        }
                    },
                    "required": true
                }
            }
        },
        "/#RemoveTagsFromCertificate": {
            "parameters": [
                {
                    "in": "query",
                    "name": "Action",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "query",
                    "name": "Version",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Content-Sha256",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Date",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Algorithm",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Credential",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Security-Token",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Signature",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-SignedHeaders",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                }
            ],
            "post": {
                "description": "<p>Remove one or more tags from an ACM certificate. A tag consists of a key-value pair. If you do not specify the value portion of the tag when calling this function, the tag will be removed regardless of value. If you specify a value, the tag is removed only if it is associated with the specified value. </p> <p>To add tags to a certificate, use the <a>AddTagsToCertificate</a> action. To view all of the tags that have been applied to a specific ACM certificate, use the <a>ListTagsForCertificate</a> action. </p>",
                "operationId": "RemoveTagsFromCertificate",
                "responses": {
                    "200": {
                        "description": "Success"
                    },
                    "480": {
                        "description": "ResourceNotFoundException",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "description": "The specified certificate cannot be found in the caller's account or the caller's account cannot be found.",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "481": {
                        "description": "InvalidArnException",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "description": "The requested Amazon Resource Name (ARN) does not refer to an existing resource.",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "482": {
                        "description": "InvalidTagException",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "description": "One or both of the values that make up the key-value pair is not valid. For example, you cannot specify a tag value that begins with <code>aws:</code>.",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "CertificateArn": {
                                        "description": "<p>String that contains the ARN of the ACM Certificate with one or more tags that you want to remove. This must be of the form:</p> <p> <code>arn:aws:acm:region:123456789012:certificate/12345678-1234-1234-1234-123456789012</code> </p> <p>For more information about ARNs, see <a href=\"http://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html\">Amazon Resource Names (ARNs) and AWS Service Namespaces</a>. </p>",
                                        "maxLength": 2048,
                                        "minLength": 20,
                                        "pattern": "arn:[\\w+=/,.@-]+:[\\w+=/,.@-]+:[\\w+=/,.@-]*:[0-9]+:[\\w+=,.@-]+(/[\\w+=,.@-]+)*",
                                        "type": "string"
                                    },
                                    "Tags": {
                                        "description": "The key-value pair that defines the tag to remove.",
                                        "items": {
                                            "description": "A key-value pair that identifies or specifies metadata about an ACM resource.",
                                            "properties": {
                                                "Key": {
                                                    "description": "The key of the tag.",
                                                    "maxLength": 128,
                                                    "minLength": 1,
                                                    "pattern": "[\\p{L}\\p{Z}\\p{N}_.:\\/=+\\-@]*",
                                                    "type": "string"
                                                },
                                                "Value": {
                                                    "description": "The value of the tag.",
                                                    "maxLength": 256,
                                                    "minLength": 0,
                                                    "pattern": "[\\p{L}\\p{Z}\\p{N}_.:\\/=+\\-@]*",
                                                    "type": "string"
                                                }
                                            },
                                            "required": [
                                                "Key"
                                            ],
                                            "type": "object"
                                        },
                                        "maxItems": 50,
                                        "minItems": 1,
                                        "type": "array"
                                    }
                                },
                                "required": [
                                    "CertificateArn",
                                    "Tags"
                                ],
                                "type": "object"
                            }
                        }
                    },
                    "required": true
                }
            }
        },
        "/#RequestCertificate": {
            "parameters": [
                {
                    "in": "query",
                    "name": "Action",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "query",
                    "name": "Version",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Content-Sha256",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Date",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Algorithm",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Credential",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Security-Token",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Signature",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-SignedHeaders",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                }
            ],
            "post": {
                "description": "<p>Requests an ACM certificate for use with other AWS services. To request an ACM certificate, you must specify a fully qualified domain name (FQDN) in the <code>DomainName</code> parameter. You can also specify additional FQDNs in the <code>SubjectAlternativeNames</code> parameter. </p> <p>If you are requesting a private certificate, domain validation is not required. If you are requesting a public certificate, each domain name that you specify must be validated to verify that you own or control the domain. You can use <a href=\"http://docs.aws.amazon.com/acm/latest/userguide/gs-acm-validate-dns.html\">DNS validation</a> or <a href=\"http://docs.aws.amazon.com/acm/latest/userguide/gs-acm-validate-email.html\">email validation</a>. We recommend that you use DNS validation. ACM issues public certificates after receiving approval from the domain owner. </p>",
                "operationId": "RequestCertificate",
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "CertificateArn": {
                                            "description": "<p>String that contains the ARN of the issued certificate. This must be of the form:</p> <p> <code>arn:aws:acm:us-east-1:123456789012:certificate/12345678-1234-1234-1234-123456789012</code> </p>",
                                            "maxLength": 2048,
                                            "minLength": 20,
                                            "pattern": "arn:[\\w+=/,.@-]+:[\\w+=/,.@-]+:[\\w+=/,.@-]*:[0-9]+:[\\w+=,.@-]+(/[\\w+=,.@-]+)*",
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "480": {
                        "description": "LimitExceededException",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "description": "An ACM limit has been exceeded.",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "481": {
                        "description": "InvalidDomainValidationOptionsException",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "description": "One or more values in the <a>DomainValidationOption</a> structure is incorrect.",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "482": {
                        "description": "InvalidArnException",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "description": "The requested Amazon Resource Name (ARN) does not refer to an existing resource.",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "CertificateAuthorityArn": {
                                        "description": "<p>The Amazon Resource Name (ARN) of the private certificate authority (CA) that will be used to issue the certificate. If you do not provide an ARN and you are trying to request a private certificate, ACM will attempt to issue a public certificate. For more information about private CAs, see the <a href=\"http://docs.aws.amazon.com/acm-pca/latest/userguide/PcaWelcome.html\">AWS Certificate Manager Private Certificate Authority (PCA)</a> user guide. The ARN must have the following form: </p> <p> <code>arn:aws:acm-pca:region:account:certificate-authority/12345678-1234-1234-1234-123456789012</code> </p>",
                                        "maxLength": 2048,
                                        "minLength": 20,
                                        "pattern": "arn:[\\w+=/,.@-]+:[\\w+=/,.@-]+:[\\w+=/,.@-]*:[0-9]+:[\\w+=,.@-]+(/[\\w+=,.@-]+)*",
                                        "type": "string"
                                    },
                                    "DomainName": {
                                        "description": "<p> Fully qualified domain name (FQDN), such as www.example.com, that you want to secure with an ACM certificate. Use an asterisk (*) to create a wildcard certificate that protects several sites in the same domain. For example, *.example.com protects www.example.com, site.example.com, and images.example.com. </p> <p> The first domain name you enter cannot exceed 63 octets, including periods. Each subsequent Subject Alternative Name (SAN), however, can be up to 253 octets in length. </p>",
                                        "maxLength": 253,
                                        "minLength": 1,
                                        "pattern": "^(\\*\\.)?(((?!-)[A-Za-z0-9-]{0,62}[A-Za-z0-9])\\.)+((?!-)[A-Za-z0-9-]{1,62}[A-Za-z0-9])$",
                                        "type": "string"
                                    },
                                    "DomainValidationOptions": {
                                        "description": "The domain name that you want ACM to use to send you emails so that you can validate domain ownership.",
                                        "items": {
                                            "description": "Contains information about the domain names that you want ACM to use to send you emails that enable you to validate domain ownership.",
                                            "properties": {
                                                "DomainName": {
                                                    "description": "A fully qualified domain name (FQDN) in the certificate request.",
                                                    "maxLength": 253,
                                                    "minLength": 1,
                                                    "pattern": "^(\\*\\.)?(((?!-)[A-Za-z0-9-]{0,62}[A-Za-z0-9])\\.)+((?!-)[A-Za-z0-9-]{1,62}[A-Za-z0-9])$",
                                                    "type": "string"
                                                },
                                                "ValidationDomain": {
                                                    "description": "<p>The domain name that you want ACM to use to send you validation emails. This domain name is the suffix of the email addresses that you want ACM to use. This must be the same as the <code>DomainName</code> value or a superdomain of the <code>DomainName</code> value. For example, if you request a certificate for <code>testing.example.com</code>, you can specify <code>example.com</code> for this value. In that case, ACM sends domain validation emails to the following five addresses:</p> <ul> <li> <p>admin@example.com</p> </li> <li> <p>administrator@example.com</p> </li> <li> <p>hostmaster@example.com</p> </li> <li> <p>postmaster@example.com</p> </li> <li> <p>webmaster@example.com</p> </li> </ul>",
                                                    "maxLength": 253,
                                                    "minLength": 1,
                                                    "pattern": "^(\\*\\.)?(((?!-)[A-Za-z0-9-]{0,62}[A-Za-z0-9])\\.)+((?!-)[A-Za-z0-9-]{1,62}[A-Za-z0-9])$",
                                                    "type": "string"
                                                }
                                            },
                                            "required": [
                                                "DomainName",
                                                "ValidationDomain"
                                            ],
                                            "type": "object"
                                        },
                                        "maxItems": 100,
                                        "minItems": 1,
                                        "type": "array"
                                    },
                                    "IdempotencyToken": {
                                        "description": "Customer chosen string that can be used to distinguish between calls to <code>RequestCertificate</code>. Idempotency tokens time out after one hour. Therefore, if you call <code>RequestCertificate</code> multiple times with the same idempotency token within one hour, ACM recognizes that you are requesting only one certificate and will issue only one. If you change the idempotency token for each call, ACM recognizes that you are requesting multiple certificates.",
                                        "maxLength": 32,
                                        "minLength": 1,
                                        "pattern": "\\w+",
                                        "type": "string"
                                    },
                                    "Options": {
                                        "description": "Currently, you can use this parameter to specify whether to add the certificate to a certificate transparency log. Certificate transparency makes it possible to detect SSL/TLS certificates that have been mistakenly or maliciously issued. Certificates that have not been logged typically produce an error message in a browser. For more information, see <a href=\"http://docs.aws.amazon.com/acm/latest/userguide/acm-bestpractices.html#best-practices-transparency\">Opting Out of Certificate Transparency Logging</a>.",
                                        "properties": {
                                            "CertificateTransparencyLoggingPreference": {
                                                "description": "You can opt out of certificate transparency logging by specifying the <code>DISABLED</code> option. Opt in by specifying <code>ENABLED</code>. ",
                                                "enum": [
                                                    "ENABLED",
                                                    "DISABLED"
                                                ],
                                                "type": "string"
                                            }
                                        },
                                        "type": "object"
                                    },
                                    "SubjectAlternativeNames": {
                                        "description": "<p>Additional FQDNs to be included in the Subject Alternative Name extension of the ACM certificate. For example, add the name www.example.net to a certificate for which the <code>DomainName</code> field is www.example.com if users can reach your site by using either name. The maximum number of domain names that you can add to an ACM certificate is 100. However, the initial limit is 10 domain names. If you need more than 10 names, you must request a limit increase. For more information, see <a href=\"http://docs.aws.amazon.com/acm/latest/userguide/acm-limits.html\">Limits</a>.</p> <p> The maximum length of a SAN DNS name is 253 octets. The name is made up of multiple labels separated by periods. No label can be longer than 63 octets. Consider the following examples: </p> <ul> <li> <p> <code>(63 octets).(63 octets).(63 octets).(61 octets)</code> is legal because the total length is 253 octets (63+1+63+1+63+1+61) and no label exceeds 63 octets.</p> </li> <li> <p> <code>(64 octets).(63 octets).(63 octets).(61 octets)</code> is not legal because the total length exceeds 253 octets (64+1+63+1+63+1+61) and the first label exceeds 63 octets.</p> </li> <li> <p> <code>(63 octets).(63 octets).(63 octets).(62 octets)</code> is not legal because the total length of the DNS name (63+1+63+1+63+1+62) exceeds 253 octets.</p> </li> </ul>",
                                        "items": {
                                            "maxLength": 253,
                                            "minLength": 1,
                                            "pattern": "^(\\*\\.)?(((?!-)[A-Za-z0-9-]{0,62}[A-Za-z0-9])\\.)+((?!-)[A-Za-z0-9-]{1,62}[A-Za-z0-9])$",
                                            "type": "string"
                                        },
                                        "maxItems": 100,
                                        "minItems": 1,
                                        "type": "array"
                                    },
                                    "ValidationMethod": {
                                        "description": "The method you want to use if you are requesting a public certificate to validate that you own or control domain. You can <a href=\"http://docs.aws.amazon.com/acm/latest/userguide/gs-acm-validate-dns.html\">validate with DNS</a> or <a href=\"http://docs.aws.amazon.com/acm/latest/userguide/gs-acm-validate-email.html\">validate with email</a>. We recommend that you use DNS validation. ",
                                        "enum": [
                                            "EMAIL",
                                            "DNS"
                                        ],
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "DomainName"
                                ],
                                "type": "object"
                            }
                        }
                    },
                    "required": true
                }
            }
        },
        "/#ResendValidationEmail": {
            "parameters": [
                {
                    "in": "query",
                    "name": "Action",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "query",
                    "name": "Version",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Content-Sha256",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Date",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Algorithm",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Credential",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Security-Token",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Signature",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-SignedHeaders",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                }
            ],
            "post": {
                "description": "Resends the email that requests domain ownership validation. The domain owner or an authorized representative must approve the ACM certificate before it can be issued. The certificate can be approved by clicking a link in the mail to navigate to the Amazon certificate approval website and then clicking <b>I Approve</b>. However, the validation email can be blocked by spam filters. Therefore, if you do not receive the original mail, you can request that the mail be resent within 72 hours of requesting the ACM certificate. If more than 72 hours have elapsed since your original request or since your last attempt to resend validation mail, you must request a new certificate. For more information about setting up your contact email addresses, see <a href=\"http://docs.aws.amazon.com/acm/latest/userguide/setup-email.html\">Configure Email for your Domain</a>. ",
                "operationId": "ResendValidationEmail",
                "responses": {
                    "200": {
                        "description": "Success"
                    },
                    "480": {
                        "description": "ResourceNotFoundException",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "description": "The specified certificate cannot be found in the caller's account or the caller's account cannot be found.",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "481": {
                        "description": "InvalidStateException",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "description": "Processing has reached an invalid state.",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "482": {
                        "description": "InvalidArnException",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "description": "The requested Amazon Resource Name (ARN) does not refer to an existing resource.",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "483": {
                        "description": "InvalidDomainValidationOptionsException",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "description": "One or more values in the <a>DomainValidationOption</a> structure is incorrect.",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "CertificateArn": {
                                        "description": "<p>String that contains the ARN of the requested certificate. The certificate ARN is generated and returned by the <a>RequestCertificate</a> action as soon as the request is made. By default, using this parameter causes email to be sent to all top-level domains you specified in the certificate request. The ARN must be of the form: </p> <p> <code>arn:aws:acm:us-east-1:123456789012:certificate/12345678-1234-1234-1234-123456789012</code> </p>",
                                        "maxLength": 2048,
                                        "minLength": 20,
                                        "pattern": "arn:[\\w+=/,.@-]+:[\\w+=/,.@-]+:[\\w+=/,.@-]*:[0-9]+:[\\w+=,.@-]+(/[\\w+=,.@-]+)*",
                                        "type": "string"
                                    },
                                    "Domain": {
                                        "description": "The fully qualified domain name (FQDN) of the certificate that needs to be validated.",
                                        "maxLength": 253,
                                        "minLength": 1,
                                        "pattern": "^(\\*\\.)?(((?!-)[A-Za-z0-9-]{0,62}[A-Za-z0-9])\\.)+((?!-)[A-Za-z0-9-]{1,62}[A-Za-z0-9])$",
                                        "type": "string"
                                    },
                                    "ValidationDomain": {
                                        "description": "<p>The base validation domain that will act as the suffix of the email addresses that are used to send the emails. This must be the same as the <code>Domain</code> value or a superdomain of the <code>Domain</code> value. For example, if you requested a certificate for <code>site.subdomain.example.com</code> and specify a <b>ValidationDomain</b> of <code>subdomain.example.com</code>, ACM sends email to the domain registrant, technical contact, and administrative contact in WHOIS and the following five addresses:</p> <ul> <li> <p>admin@subdomain.example.com</p> </li> <li> <p>administrator@subdomain.example.com</p> </li> <li> <p>hostmaster@subdomain.example.com</p> </li> <li> <p>postmaster@subdomain.example.com</p> </li> <li> <p>webmaster@subdomain.example.com</p> </li> </ul>",
                                        "maxLength": 253,
                                        "minLength": 1,
                                        "pattern": "^(\\*\\.)?(((?!-)[A-Za-z0-9-]{0,62}[A-Za-z0-9])\\.)+((?!-)[A-Za-z0-9-]{1,62}[A-Za-z0-9])$",
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "CertificateArn",
                                    "Domain",
                                    "ValidationDomain"
                                ],
                                "type": "object"
                            }
                        }
                    },
                    "required": true
                }
            }
        },
        "/#UpdateCertificateOptions": {
            "parameters": [
                {
                    "in": "query",
                    "name": "Action",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "query",
                    "name": "Version",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Content-Sha256",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Date",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Algorithm",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Credential",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Security-Token",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Signature",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-SignedHeaders",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                }
            ],
            "post": {
                "description": "Updates a certificate. Currently, you can use this function to specify whether to opt in to or out of recording your certificate in a certificate transparency log. For more information, see <a href=\"http://docs.aws.amazon.com/acm/latest/userguide/acm-bestpractices.html#best-practices-transparency\"> Opting Out of Certificate Transparency Logging</a>. ",
                "operationId": "UpdateCertificateOptions",
                "responses": {
                    "200": {
                        "description": "Success"
                    },
                    "480": {
                        "description": "ResourceNotFoundException",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "description": "The specified certificate cannot be found in the caller's account or the caller's account cannot be found.",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "481": {
                        "description": "LimitExceededException",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "description": "An ACM limit has been exceeded.",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "482": {
                        "description": "InvalidStateException",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "description": "Processing has reached an invalid state.",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "483": {
                        "description": "InvalidArnException",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "description": "The requested Amazon Resource Name (ARN) does not refer to an existing resource.",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "CertificateArn": {
                                        "description": "<p>ARN of the requested certificate to update. This must be of the form:</p> <p> <code>arn:aws:acm:us-east-1:<i>account</i>:certificate/<i>12345678-1234-1234-1234-123456789012</i> </code> </p>",
                                        "maxLength": 2048,
                                        "minLength": 20,
                                        "pattern": "arn:[\\w+=/,.@-]+:[\\w+=/,.@-]+:[\\w+=/,.@-]*:[0-9]+:[\\w+=,.@-]+(/[\\w+=,.@-]+)*",
                                        "type": "string"
                                    },
                                    "Options": {
                                        "description": "Use to update the options for your certificate. Currently, you can specify whether to add your certificate to a transparency log. Certificate transparency makes it possible to detect SSL/TLS certificates that have been mistakenly or maliciously issued. Certificates that have not been logged typically produce an error message in a browser. ",
                                        "properties": {
                                            "CertificateTransparencyLoggingPreference": {
                                                "description": "You can opt out of certificate transparency logging by specifying the <code>DISABLED</code> option. Opt in by specifying <code>ENABLED</code>. ",
                                                "enum": [
                                                    "ENABLED",
                                                    "DISABLED"
                                                ],
                                                "type": "string"
                                            }
                                        },
                                        "type": "object"
                                    }
                                },
                                "required": [
                                    "CertificateArn",
                                    "Options"
                                ],
                                "type": "object"
                            }
                        }
                    },
                    "required": true
                }
            }
        }
    },
    "components": {
        "schemas": {
            "AddTagsToCertificateRequest": {
                "properties": {
                    "CertificateArn": {
                        "description": "<p>String that contains the ARN of the ACM certificate to which the tag is to be applied. This must be of the form:</p> <p> <code>arn:aws:acm:region:123456789012:certificate/12345678-1234-1234-1234-123456789012</code> </p> <p>For more information about ARNs, see <a href=\"http://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html\">Amazon Resource Names (ARNs) and AWS Service Namespaces</a>. </p>",
                        "maxLength": 2048,
                        "minLength": 20,
                        "pattern": "arn:[\\w+=/,.@-]+:[\\w+=/,.@-]+:[\\w+=/,.@-]*:[0-9]+:[\\w+=,.@-]+(/[\\w+=,.@-]+)*",
                        "type": "string"
                    },
                    "Tags": {
                        "description": "The key-value pair that defines the tag. The tag value is optional.",
                        "items": {
                            "description": "A key-value pair that identifies or specifies metadata about an ACM resource.",
                            "properties": {
                                "Key": {
                                    "description": "The key of the tag.",
                                    "maxLength": 128,
                                    "minLength": 1,
                                    "pattern": "[\\p{L}\\p{Z}\\p{N}_.:\\/=+\\-@]*",
                                    "type": "string"
                                },
                                "Value": {
                                    "description": "The value of the tag.",
                                    "maxLength": 256,
                                    "minLength": 0,
                                    "pattern": "[\\p{L}\\p{Z}\\p{N}_.:\\/=+\\-@]*",
                                    "type": "string"
                                }
                            },
                            "required": [
                                "Key"
                            ],
                            "type": "object"
                        },
                        "maxItems": 50,
                        "minItems": 1,
                        "type": "array"
                    }
                },
                "required": [
                    "CertificateArn",
                    "Tags"
                ],
                "type": "object"
            },
            "Arn": {
                "maxLength": 2048,
                "minLength": 20,
                "pattern": "arn:[\\w+=/,.@-]+:[\\w+=/,.@-]+:[\\w+=/,.@-]*:[0-9]+:[\\w+=,.@-]+(/[\\w+=,.@-]+)*",
                "type": "string"
            },
            "CertificateBody": {
                "maxLength": 32768,
                "minLength": 1,
                "pattern": "-{5}BEGIN CERTIFICATE-{5}\\u000D?\\u000A([A-Za-z0-9/+]{64}\\u000D?\\u000A)*[A-Za-z0-9/+]{1,64}={0,2}\\u000D?\\u000A-{5}END CERTIFICATE-{5}(\\u000D?\\u000A)?",
                "type": "string"
            },
            "CertificateBodyBlob": {
                "maxLength": 32768,
                "minLength": 1,
                "type": "string"
            },
            "CertificateChain": {
                "maxLength": 2097152,
                "minLength": 1,
                "pattern": "(-{5}BEGIN CERTIFICATE-{5}\\u000D?\\u000A([A-Za-z0-9/+]{64}\\u000D?\\u000A)*[A-Za-z0-9/+]{1,64}={0,2}\\u000D?\\u000A-{5}END CERTIFICATE-{5}\\u000D?\\u000A)*-{5}BEGIN CERTIFICATE-{5}\\u000D?\\u000A([A-Za-z0-9/+]{64}\\u000D?\\u000A)*[A-Za-z0-9/+]{1,64}={0,2}\\u000D?\\u000A-{5}END CERTIFICATE-{5}(\\u000D?\\u000A)?",
                "type": "string"
            },
            "CertificateChainBlob": {
                "maxLength": 2097152,
                "minLength": 1,
                "type": "string"
            },
            "CertificateDetail": {
                "description": "Contains metadata about an ACM certificate. This structure is returned in the response to a <a>DescribeCertificate</a> request. ",
                "properties": {
                    "CertificateArn": {
                        "description": "The Amazon Resource Name (ARN) of the certificate. For more information about ARNs, see <a href=\"http://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html\">Amazon Resource Names (ARNs) and AWS Service Namespaces</a> in the <i>AWS General Reference</i>.",
                        "maxLength": 2048,
                        "minLength": 20,
                        "pattern": "arn:[\\w+=/,.@-]+:[\\w+=/,.@-]+:[\\w+=/,.@-]*:[0-9]+:[\\w+=,.@-]+(/[\\w+=,.@-]+)*",
                        "type": "string"
                    },
                    "CertificateAuthorityArn": {
                        "description": "<p>The Amazon Resource Name (ARN) of the ACM PCA private certificate authority (CA) that issued the certificate. This has the following format: </p> <p> <code>arn:aws:acm-pca:region:account:certificate-authority/12345678-1234-1234-1234-123456789012</code> </p>",
                        "maxLength": 2048,
                        "minLength": 20,
                        "pattern": "arn:[\\w+=/,.@-]+:[\\w+=/,.@-]+:[\\w+=/,.@-]*:[0-9]+:[\\w+=,.@-]+(/[\\w+=,.@-]+)*",
                        "type": "string"
                    },
                    "CreatedAt": {
                        "description": "The time at which the certificate was requested. This value exists only when the certificate type is <code>AMAZON_ISSUED</code>. ",
                        "format": "date-time",
                        "type": "string"
                    },
                    "DomainName": {
                        "description": "The fully qualified domain name for the certificate, such as www.example.com or example.com.",
                        "maxLength": 253,
                        "minLength": 1,
                        "pattern": "^(\\*\\.)?(((?!-)[A-Za-z0-9-]{0,62}[A-Za-z0-9])\\.)+((?!-)[A-Za-z0-9-]{1,62}[A-Za-z0-9])$",
                        "type": "string"
                    },
                    "DomainValidationOptions": {
                        "description": "Contains information about the initial validation of each domain name that occurs as a result of the <a>RequestCertificate</a> request. This field exists only when the certificate type is <code>AMAZON_ISSUED</code>. ",
                        "items": {
                            "description": "Contains information about the validation of each domain name in the certificate.",
                            "properties": {
                                "DomainName": {
                                    "description": "A fully qualified domain name (FQDN) in the certificate. For example, <code>www.example.com</code> or <code>example.com</code>. ",
                                    "maxLength": 253,
                                    "minLength": 1,
                                    "pattern": "^(\\*\\.)?(((?!-)[A-Za-z0-9-]{0,62}[A-Za-z0-9])\\.)+((?!-)[A-Za-z0-9-]{1,62}[A-Za-z0-9])$",
                                    "type": "string"
                                },
                                "ResourceRecord": {
                                    "description": "Contains the CNAME record that you add to your DNS database for domain validation. For more information, see <a href=\"http://docs.aws.amazon.com/acm/latest/userguide/gs-acm-validate-dns.html\">Use DNS to Validate Domain Ownership</a>.",
                                    "properties": {
                                        "Name": {
                                            "description": "The name of the DNS record to create in your domain. This is supplied by ACM.",
                                            "type": "string"
                                        },
                                        "Type": {
                                            "description": "The type of DNS record. Currently this can be <code>CNAME</code>.",
                                            "enum": [
                                                "CNAME"
                                            ],
                                            "type": "string"
                                        },
                                        "Value": {
                                            "description": "The value of the CNAME record to add to your DNS database. This is supplied by ACM.",
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "Name",
                                        "Type",
                                        "Value"
                                    ],
                                    "type": "object"
                                },
                                "ValidationDomain": {
                                    "description": "The domain name that ACM used to send domain validation emails.",
                                    "maxLength": 253,
                                    "minLength": 1,
                                    "pattern": "^(\\*\\.)?(((?!-)[A-Za-z0-9-]{0,62}[A-Za-z0-9])\\.)+((?!-)[A-Za-z0-9-]{1,62}[A-Za-z0-9])$",
                                    "type": "string"
                                },
                                "ValidationEmails": {
                                    "description": "A list of email addresses that ACM used to send domain validation emails.",
                                    "items": {
                                        "type": "string"
                                    },
                                    "type": "array"
                                },
                                "ValidationMethod": {
                                    "description": "Specifies the domain validation method.",
                                    "enum": [
                                        "EMAIL",
                                        "DNS"
                                    ],
                                    "type": "string"
                                },
                                "ValidationStatus": {
                                    "description": "<p>The validation status of the domain name. This can be one of the following values:</p> <ul> <li> <p> <code>PENDING_VALIDATION</code> </p> </li> <li> <p> <code/>SUCCESS</p> </li> <li> <p> <code/>FAILED</p> </li> </ul>",
                                    "enum": [
                                        "PENDING_VALIDATION",
                                        "SUCCESS",
                                        "FAILED"
                                    ],
                                    "type": "string"
                                }
                            },
                            "required": [
                                "DomainName"
                            ],
                            "type": "object"
                        },
                        "maxItems": 1000,
                        "minItems": 1,
                        "type": "array"
                    },
                    "ExtendedKeyUsages": {
                        "description": "Contains a list of Extended Key Usage X.509 v3 extension objects. Each object specifies a purpose for which the certificate public key can be used and consists of a name and an object identifier (OID). ",
                        "items": {
                            "description": "The Extended Key Usage X.509 v3 extension defines one or more purposes for which the public key can be used. This is in addition to or in place of the basic purposes specified by the Key Usage extension. ",
                            "properties": {
                                "Name": {
                                    "description": "The name of an Extended Key Usage value.",
                                    "enum": [
                                        "TLS_WEB_SERVER_AUTHENTICATION",
                                        "TLS_WEB_CLIENT_AUTHENTICATION",
                                        "CODE_SIGNING",
                                        "EMAIL_PROTECTION",
                                        "TIME_STAMPING",
                                        "OCSP_SIGNING",
                                        "IPSEC_END_SYSTEM",
                                        "IPSEC_TUNNEL",
                                        "IPSEC_USER",
                                        "ANY",
                                        "NONE",
                                        "CUSTOM"
                                    ],
                                    "type": "string"
                                },
                                "OID": {
                                    "description": "<p>An object identifier (OID) for the extension value. OIDs are strings of numbers separated by periods. The following OIDs are defined in RFC 3280 and RFC 5280. </p> <ul> <li> <p> <code>1.3.6.1.5.5.7.3.1 (TLS_WEB_SERVER_AUTHENTICATION)</code> </p> </li> <li> <p> <code>1.3.6.1.5.5.7.3.2 (TLS_WEB_CLIENT_AUTHENTICATION)</code> </p> </li> <li> <p> <code>1.3.6.1.5.5.7.3.3 (CODE_SIGNING)</code> </p> </li> <li> <p> <code>1.3.6.1.5.5.7.3.4 (EMAIL_PROTECTION)</code> </p> </li> <li> <p> <code>1.3.6.1.5.5.7.3.8 (TIME_STAMPING)</code> </p> </li> <li> <p> <code>1.3.6.1.5.5.7.3.9 (OCSP_SIGNING)</code> </p> </li> <li> <p> <code>1.3.6.1.5.5.7.3.5 (IPSEC_END_SYSTEM)</code> </p> </li> <li> <p> <code>1.3.6.1.5.5.7.3.6 (IPSEC_TUNNEL)</code> </p> </li> <li> <p> <code>1.3.6.1.5.5.7.3.7 (IPSEC_USER)</code> </p> </li> </ul>",
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        },
                        "type": "array"
                    },
                    "FailureReason": {
                        "description": "The reason the certificate request failed. This value exists only when the certificate status is <code>FAILED</code>. For more information, see <a href=\"http://docs.aws.amazon.com/acm/latest/userguide/troubleshooting.html#troubleshooting-failed\">Certificate Request Failed</a> in the <i>AWS Certificate Manager User Guide</i>. ",
                        "enum": [
                            "NO_AVAILABLE_CONTACTS",
                            "ADDITIONAL_VERIFICATION_REQUIRED",
                            "DOMAIN_NOT_ALLOWED",
                            "INVALID_PUBLIC_DOMAIN",
                            "CAA_ERROR",
                            "PCA_LIMIT_EXCEEDED",
                            "PCA_INVALID_ARN",
                            "PCA_INVALID_STATE",
                            "PCA_REQUEST_FAILED",
                            "PCA_RESOURCE_NOT_FOUND",
                            "PCA_INVALID_ARGS",
                            "OTHER"
                        ],
                        "type": "string"
                    },
                    "ImportedAt": {
                        "description": "The date and time at which the certificate was imported. This value exists only when the certificate type is <code>IMPORTED</code>. ",
                        "format": "date-time",
                        "type": "string"
                    },
                    "InUseBy": {
                        "description": "A list of ARNs for the AWS resources that are using the certificate. A certificate can be used by multiple AWS resources. ",
                        "items": {
                            "type": "string"
                        },
                        "type": "array"
                    },
                    "IssuedAt": {
                        "description": "The time at which the certificate was issued. This value exists only when the certificate type is <code>AMAZON_ISSUED</code>. ",
                        "format": "date-time",
                        "type": "string"
                    },
                    "Issuer": {
                        "description": "The name of the certificate authority that issued and signed the certificate.",
                        "type": "string"
                    },
                    "KeyAlgorithm": {
                        "description": "The algorithm that was used to generate the public-private key pair.",
                        "enum": [
                            "RSA_2048",
                            "RSA_1024",
                            "RSA_4096",
                            "EC_prime256v1",
                            "EC_secp384r1",
                            "EC_secp521r1"
                        ],
                        "type": "string"
                    },
                    "KeyUsages": {
                        "description": "A list of Key Usage X.509 v3 extension objects. Each object is a string value that identifies the purpose of the public key contained in the certificate. Possible extension values include DIGITAL_SIGNATURE, KEY_ENCHIPHERMENT, NON_REPUDIATION, and more.",
                        "items": {
                            "description": "The Key Usage X.509 v3 extension defines the purpose of the public key contained in the certificate.",
                            "properties": {
                                "Name": {
                                    "description": "A string value that contains a Key Usage extension name.",
                                    "enum": [
                                        "DIGITAL_SIGNATURE",
                                        "NON_REPUDIATION",
                                        "KEY_ENCIPHERMENT",
                                        "DATA_ENCIPHERMENT",
                                        "KEY_AGREEMENT",
                                        "CERTIFICATE_SIGNING",
                                        "CRL_SIGNING",
                                        "ENCIPHER_ONLY",
                                        "DECIPHER_ONLY",
                                        "ANY",
                                        "CUSTOM"
                                    ],
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        },
                        "type": "array"
                    },
                    "NotAfter": {
                        "description": "The time after which the certificate is not valid.",
                        "format": "date-time",
                        "type": "string"
                    },
                    "NotBefore": {
                        "description": "The time before which the certificate is not valid.",
                        "format": "date-time",
                        "type": "string"
                    },
                    "Options": {
                        "description": "Value that specifies whether to add the certificate to a transparency log. Certificate transparency makes it possible to detect SSL certificates that have been mistakenly or maliciously issued. A browser might respond to certificate that has not been logged by showing an error message. The logs are cryptographically secure. ",
                        "properties": {
                            "CertificateTransparencyLoggingPreference": {
                                "description": "You can opt out of certificate transparency logging by specifying the <code>DISABLED</code> option. Opt in by specifying <code>ENABLED</code>. ",
                                "enum": [
                                    "ENABLED",
                                    "DISABLED"
                                ],
                                "type": "string"
                            }
                        },
                        "type": "object"
                    },
                    "RenewalEligibility": {
                        "description": "Specifies whether the certificate is eligible for renewal.",
                        "enum": [
                            "ELIGIBLE",
                            "INELIGIBLE"
                        ],
                        "type": "string"
                    },
                    "RenewalSummary": {
                        "description": "Contains information about the status of ACM's <a href=\"http://docs.aws.amazon.com/acm/latest/userguide/acm-renewal.html\">managed renewal</a> for the certificate. This field exists only when the certificate type is <code>AMAZON_ISSUED</code>.",
                        "properties": {
                            "DomainValidationOptions": {
                                "description": "Contains information about the validation of each domain name in the certificate, as it pertains to ACM's <a href=\"http://docs.aws.amazon.com/acm/latest/userguide/acm-renewal.html\">managed renewal</a>. This is different from the initial validation that occurs as a result of the <a>RequestCertificate</a> request. This field exists only when the certificate type is <code>AMAZON_ISSUED</code>.",
                                "items": {
                                    "description": "Contains information about the validation of each domain name in the certificate.",
                                    "properties": {
                                        "DomainName": {
                                            "description": "A fully qualified domain name (FQDN) in the certificate. For example, <code>www.example.com</code> or <code>example.com</code>. ",
                                            "maxLength": 253,
                                            "minLength": 1,
                                            "pattern": "^(\\*\\.)?(((?!-)[A-Za-z0-9-]{0,62}[A-Za-z0-9])\\.)+((?!-)[A-Za-z0-9-]{1,62}[A-Za-z0-9])$",
                                            "type": "string"
                                        },
                                        "ResourceRecord": {
                                            "description": "Contains the CNAME record that you add to your DNS database for domain validation. For more information, see <a href=\"http://docs.aws.amazon.com/acm/latest/userguide/gs-acm-validate-dns.html\">Use DNS to Validate Domain Ownership</a>.",
                                            "properties": {
                                                "Name": {
                                                    "description": "The name of the DNS record to create in your domain. This is supplied by ACM.",
                                                    "type": "string"
                                                },
                                                "Type": {
                                                    "description": "The type of DNS record. Currently this can be <code>CNAME</code>.",
                                                    "enum": [
                                                        "CNAME"
                                                    ],
                                                    "type": "string"
                                                },
                                                "Value": {
                                                    "description": "The value of the CNAME record to add to your DNS database. This is supplied by ACM.",
                                                    "type": "string"
                                                }
                                            },
                                            "required": [
                                                "Name",
                                                "Type",
                                                "Value"
                                            ],
                                            "type": "object"
                                        },
                                        "ValidationDomain": {
                                            "description": "The domain name that ACM used to send domain validation emails.",
                                            "maxLength": 253,
                                            "minLength": 1,
                                            "pattern": "^(\\*\\.)?(((?!-)[A-Za-z0-9-]{0,62}[A-Za-z0-9])\\.)+((?!-)[A-Za-z0-9-]{1,62}[A-Za-z0-9])$",
                                            "type": "string"
                                        },
                                        "ValidationEmails": {
                                            "description": "A list of email addresses that ACM used to send domain validation emails.",
                                            "items": {
                                                "type": "string"
                                            },
                                            "type": "array"
                                        },
                                        "ValidationMethod": {
                                            "description": "Specifies the domain validation method.",
                                            "enum": [
                                                "EMAIL",
                                                "DNS"
                                            ],
                                            "type": "string"
                                        },
                                        "ValidationStatus": {
                                            "description": "<p>The validation status of the domain name. This can be one of the following values:</p> <ul> <li> <p> <code>PENDING_VALIDATION</code> </p> </li> <li> <p> <code/>SUCCESS</p> </li> <li> <p> <code/>FAILED</p> </li> </ul>",
                                            "enum": [
                                                "PENDING_VALIDATION",
                                                "SUCCESS",
                                                "FAILED"
                                            ],
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "DomainName"
                                    ],
                                    "type": "object"
                                },
                                "maxItems": 1000,
                                "minItems": 1,
                                "type": "array"
                            },
                            "RenewalStatus": {
                                "description": "The status of ACM's <a href=\"http://docs.aws.amazon.com/acm/latest/userguide/acm-renewal.html\">managed renewal</a> of the certificate.",
                                "enum": [
                                    "PENDING_AUTO_RENEWAL",
                                    "PENDING_VALIDATION",
                                    "SUCCESS",
                                    "FAILED"
                                ],
                                "type": "string"
                            }
                        },
                        "required": [
                            "RenewalStatus",
                            "DomainValidationOptions"
                        ],
                        "type": "object"
                    },
                    "RevocationReason": {
                        "description": "The reason the certificate was revoked. This value exists only when the certificate status is <code>REVOKED</code>. ",
                        "enum": [
                            "UNSPECIFIED",
                            "KEY_COMPROMISE",
                            "CA_COMPROMISE",
                            "AFFILIATION_CHANGED",
                            "SUPERCEDED",
                            "CESSATION_OF_OPERATION",
                            "CERTIFICATE_HOLD",
                            "REMOVE_FROM_CRL",
                            "PRIVILEGE_WITHDRAWN",
                            "A_A_COMPROMISE"
                        ],
                        "type": "string"
                    },
                    "RevokedAt": {
                        "description": "The time at which the certificate was revoked. This value exists only when the certificate status is <code>REVOKED</code>. ",
                        "format": "date-time",
                        "type": "string"
                    },
                    "Serial": {
                        "description": "The serial number of the certificate.",
                        "type": "string"
                    },
                    "SignatureAlgorithm": {
                        "description": "The algorithm that was used to sign the certificate.",
                        "type": "string"
                    },
                    "Status": {
                        "description": "The status of the certificate.",
                        "enum": [
                            "PENDING_VALIDATION",
                            "ISSUED",
                            "INACTIVE",
                            "EXPIRED",
                            "VALIDATION_TIMED_OUT",
                            "REVOKED",
                            "FAILED"
                        ],
                        "type": "string"
                    },
                    "Subject": {
                        "description": "The name of the entity that is associated with the public key contained in the certificate.",
                        "type": "string"
                    },
                    "SubjectAlternativeNames": {
                        "description": "One or more domain names (subject alternative names) included in the certificate. This list contains the domain names that are bound to the public key that is contained in the certificate. The subject alternative names include the canonical domain name (CN) of the certificate and additional domain names that can be used to connect to the website. ",
                        "items": {
                            "maxLength": 253,
                            "minLength": 1,
                            "pattern": "^(\\*\\.)?(((?!-)[A-Za-z0-9-]{0,62}[A-Za-z0-9])\\.)+((?!-)[A-Za-z0-9-]{1,62}[A-Za-z0-9])$",
                            "type": "string"
                        },
                        "maxItems": 100,
                        "minItems": 1,
                        "type": "array"
                    },
                    "Type": {
                        "description": "The source of the certificate. For certificates provided by ACM, this value is <code>AMAZON_ISSUED</code>. For certificates that you imported with <a>ImportCertificate</a>, this value is <code>IMPORTED</code>. ACM does not provide <a href=\"http://docs.aws.amazon.com/acm/latest/userguide/acm-renewal.html\">managed renewal</a> for imported certificates. For more information about the differences between certificates that you import and those that ACM provides, see <a href=\"http://docs.aws.amazon.com/acm/latest/userguide/import-certificate.html\">Importing Certificates</a> in the <i>AWS Certificate Manager User Guide</i>. ",
                        "enum": [
                            "IMPORTED",
                            "AMAZON_ISSUED",
                            "PRIVATE"
                        ],
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "CertificateOptions": {
                "description": "Structure that contains options for your certificate. Currently, you can use this only to specify whether to opt in to or out of certificate transparency logging. Some browsers require that public certificates issued for your domain be recorded in a log. Certificates that are not logged typically generate a browser error. Transparency makes it possible for you to detect SSL/TLS certificates that have been mistakenly or maliciously issued for your domain. For general information, see <a href=\"http://docs.aws.amazon.com/acm/latest/userguide/acm-concepts.html#concept-transparency\">Certificate Transparency Logging</a>. ",
                "properties": {
                    "CertificateTransparencyLoggingPreference": {
                        "description": "You can opt out of certificate transparency logging by specifying the <code>DISABLED</code> option. Opt in by specifying <code>ENABLED</code>. ",
                        "enum": [
                            "ENABLED",
                            "DISABLED"
                        ],
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "CertificateStatus": {
                "enum": [
                    "PENDING_VALIDATION",
                    "ISSUED",
                    "INACTIVE",
                    "EXPIRED",
                    "VALIDATION_TIMED_OUT",
                    "REVOKED",
                    "FAILED"
                ],
                "type": "string"
            },
            "CertificateStatuses": {
                "items": {
                    "enum": [
                        "PENDING_VALIDATION",
                        "ISSUED",
                        "INACTIVE",
                        "EXPIRED",
                        "VALIDATION_TIMED_OUT",
                        "REVOKED",
                        "FAILED"
                    ],
                    "type": "string"
                },
                "type": "array"
            },
            "CertificateSummary": {
                "description": "This structure is returned in the response object of <a>ListCertificates</a> action. ",
                "properties": {
                    "CertificateArn": {
                        "description": "<p>Amazon Resource Name (ARN) of the certificate. This is of the form:</p> <p> <code>arn:aws:acm:region:123456789012:certificate/12345678-1234-1234-1234-123456789012</code> </p> <p>For more information about ARNs, see <a href=\"http://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html\">Amazon Resource Names (ARNs) and AWS Service Namespaces</a>. </p>",
                        "maxLength": 2048,
                        "minLength": 20,
                        "pattern": "arn:[\\w+=/,.@-]+:[\\w+=/,.@-]+:[\\w+=/,.@-]*:[0-9]+:[\\w+=,.@-]+(/[\\w+=,.@-]+)*",
                        "type": "string"
                    },
                    "DomainName": {
                        "description": "Fully qualified domain name (FQDN), such as www.example.com or example.com, for the certificate.",
                        "maxLength": 253,
                        "minLength": 1,
                        "pattern": "^(\\*\\.)?(((?!-)[A-Za-z0-9-]{0,62}[A-Za-z0-9])\\.)+((?!-)[A-Za-z0-9-]{1,62}[A-Za-z0-9])$",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "CertificateSummaryList": {
                "items": {
                    "description": "This structure is returned in the response object of <a>ListCertificates</a> action. ",
                    "properties": {
                        "CertificateArn": {
                            "description": "<p>Amazon Resource Name (ARN) of the certificate. This is of the form:</p> <p> <code>arn:aws:acm:region:123456789012:certificate/12345678-1234-1234-1234-123456789012</code> </p> <p>For more information about ARNs, see <a href=\"http://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html\">Amazon Resource Names (ARNs) and AWS Service Namespaces</a>. </p>",
                            "maxLength": 2048,
                            "minLength": 20,
                            "pattern": "arn:[\\w+=/,.@-]+:[\\w+=/,.@-]+:[\\w+=/,.@-]*:[0-9]+:[\\w+=,.@-]+(/[\\w+=,.@-]+)*",
                            "type": "string"
                        },
                        "DomainName": {
                            "description": "Fully qualified domain name (FQDN), such as www.example.com or example.com, for the certificate.",
                            "maxLength": 253,
                            "minLength": 1,
                            "pattern": "^(\\*\\.)?(((?!-)[A-Za-z0-9-]{0,62}[A-Za-z0-9])\\.)+((?!-)[A-Za-z0-9-]{1,62}[A-Za-z0-9])$",
                            "type": "string"
                        }
                    },
                    "type": "object"
                },
                "type": "array"
            },
            "CertificateTransparencyLoggingPreference": {
                "enum": [
                    "ENABLED",
                    "DISABLED"
                ],
                "type": "string"
            },
            "CertificateType": {
                "enum": [
                    "IMPORTED",
                    "AMAZON_ISSUED",
                    "PRIVATE"
                ],
                "type": "string"
            },
            "DeleteCertificateRequest": {
                "properties": {
                    "CertificateArn": {
                        "description": "<p>String that contains the ARN of the ACM certificate to be deleted. This must be of the form:</p> <p> <code>arn:aws:acm:region:123456789012:certificate/12345678-1234-1234-1234-123456789012</code> </p> <p>For more information about ARNs, see <a href=\"http://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html\">Amazon Resource Names (ARNs) and AWS Service Namespaces</a>.</p>",
                        "maxLength": 2048,
                        "minLength": 20,
                        "pattern": "arn:[\\w+=/,.@-]+:[\\w+=/,.@-]+:[\\w+=/,.@-]*:[0-9]+:[\\w+=,.@-]+(/[\\w+=,.@-]+)*",
                        "type": "string"
                    }
                },
                "required": [
                    "CertificateArn"
                ],
                "type": "object"
            },
            "DescribeCertificateRequest": {
                "properties": {
                    "CertificateArn": {
                        "description": "<p>The Amazon Resource Name (ARN) of the ACM certificate. The ARN must have the following form:</p> <p> <code>arn:aws:acm:region:123456789012:certificate/12345678-1234-1234-1234-123456789012</code> </p> <p>For more information about ARNs, see <a href=\"http://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html\">Amazon Resource Names (ARNs) and AWS Service Namespaces</a>.</p>",
                        "maxLength": 2048,
                        "minLength": 20,
                        "pattern": "arn:[\\w+=/,.@-]+:[\\w+=/,.@-]+:[\\w+=/,.@-]*:[0-9]+:[\\w+=,.@-]+(/[\\w+=,.@-]+)*",
                        "type": "string"
                    }
                },
                "required": [
                    "CertificateArn"
                ],
                "type": "object"
            },
            "DescribeCertificateResponse": {
                "properties": {
                    "Certificate": {
                        "description": "Metadata about an ACM certificate.",
                        "properties": {
                            "CertificateArn": {
                                "description": "The Amazon Resource Name (ARN) of the certificate. For more information about ARNs, see <a href=\"http://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html\">Amazon Resource Names (ARNs) and AWS Service Namespaces</a> in the <i>AWS General Reference</i>.",
                                "maxLength": 2048,
                                "minLength": 20,
                                "pattern": "arn:[\\w+=/,.@-]+:[\\w+=/,.@-]+:[\\w+=/,.@-]*:[0-9]+:[\\w+=,.@-]+(/[\\w+=,.@-]+)*",
                                "type": "string"
                            },
                            "CertificateAuthorityArn": {
                                "description": "<p>The Amazon Resource Name (ARN) of the ACM PCA private certificate authority (CA) that issued the certificate. This has the following format: </p> <p> <code>arn:aws:acm-pca:region:account:certificate-authority/12345678-1234-1234-1234-123456789012</code> </p>",
                                "maxLength": 2048,
                                "minLength": 20,
                                "pattern": "arn:[\\w+=/,.@-]+:[\\w+=/,.@-]+:[\\w+=/,.@-]*:[0-9]+:[\\w+=,.@-]+(/[\\w+=,.@-]+)*",
                                "type": "string"
                            },
                            "CreatedAt": {
                                "description": "The time at which the certificate was requested. This value exists only when the certificate type is <code>AMAZON_ISSUED</code>. ",
                                "format": "date-time",
                                "type": "string"
                            },
                            "DomainName": {
                                "description": "The fully qualified domain name for the certificate, such as www.example.com or example.com.",
                                "maxLength": 253,
                                "minLength": 1,
                                "pattern": "^(\\*\\.)?(((?!-)[A-Za-z0-9-]{0,62}[A-Za-z0-9])\\.)+((?!-)[A-Za-z0-9-]{1,62}[A-Za-z0-9])$",
                                "type": "string"
                            },
                            "DomainValidationOptions": {
                                "description": "Contains information about the initial validation of each domain name that occurs as a result of the <a>RequestCertificate</a> request. This field exists only when the certificate type is <code>AMAZON_ISSUED</code>. ",
                                "items": {
                                    "description": "Contains information about the validation of each domain name in the certificate.",
                                    "properties": {
                                        "DomainName": {
                                            "description": "A fully qualified domain name (FQDN) in the certificate. For example, <code>www.example.com</code> or <code>example.com</code>. ",
                                            "maxLength": 253,
                                            "minLength": 1,
                                            "pattern": "^(\\*\\.)?(((?!-)[A-Za-z0-9-]{0,62}[A-Za-z0-9])\\.)+((?!-)[A-Za-z0-9-]{1,62}[A-Za-z0-9])$",
                                            "type": "string"
                                        },
                                        "ResourceRecord": {
                                            "description": "Contains the CNAME record that you add to your DNS database for domain validation. For more information, see <a href=\"http://docs.aws.amazon.com/acm/latest/userguide/gs-acm-validate-dns.html\">Use DNS to Validate Domain Ownership</a>.",
                                            "properties": {
                                                "Name": {
                                                    "description": "The name of the DNS record to create in your domain. This is supplied by ACM.",
                                                    "type": "string"
                                                },
                                                "Type": {
                                                    "description": "The type of DNS record. Currently this can be <code>CNAME</code>.",
                                                    "enum": [
                                                        "CNAME"
                                                    ],
                                                    "type": "string"
                                                },
                                                "Value": {
                                                    "description": "The value of the CNAME record to add to your DNS database. This is supplied by ACM.",
                                                    "type": "string"
                                                }
                                            },
                                            "required": [
                                                "Name",
                                                "Type",
                                                "Value"
                                            ],
                                            "type": "object"
                                        },
                                        "ValidationDomain": {
                                            "description": "The domain name that ACM used to send domain validation emails.",
                                            "maxLength": 253,
                                            "minLength": 1,
                                            "pattern": "^(\\*\\.)?(((?!-)[A-Za-z0-9-]{0,62}[A-Za-z0-9])\\.)+((?!-)[A-Za-z0-9-]{1,62}[A-Za-z0-9])$",
                                            "type": "string"
                                        },
                                        "ValidationEmails": {
                                            "description": "A list of email addresses that ACM used to send domain validation emails.",
                                            "items": {
                                                "type": "string"
                                            },
                                            "type": "array"
                                        },
                                        "ValidationMethod": {
                                            "description": "Specifies the domain validation method.",
                                            "enum": [
                                                "EMAIL",
                                                "DNS"
                                            ],
                                            "type": "string"
                                        },
                                        "ValidationStatus": {
                                            "description": "<p>The validation status of the domain name. This can be one of the following values:</p> <ul> <li> <p> <code>PENDING_VALIDATION</code> </p> </li> <li> <p> <code/>SUCCESS</p> </li> <li> <p> <code/>FAILED</p> </li> </ul>",
                                            "enum": [
                                                "PENDING_VALIDATION",
                                                "SUCCESS",
                                                "FAILED"
                                            ],
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "DomainName"
                                    ],
                                    "type": "object"
                                },
                                "maxItems": 1000,
                                "minItems": 1,
                                "type": "array"
                            },
                            "ExtendedKeyUsages": {
                                "description": "Contains a list of Extended Key Usage X.509 v3 extension objects. Each object specifies a purpose for which the certificate public key can be used and consists of a name and an object identifier (OID). ",
                                "items": {
                                    "description": "The Extended Key Usage X.509 v3 extension defines one or more purposes for which the public key can be used. This is in addition to or in place of the basic purposes specified by the Key Usage extension. ",
                                    "properties": {
                                        "Name": {
                                            "description": "The name of an Extended Key Usage value.",
                                            "enum": [
                                                "TLS_WEB_SERVER_AUTHENTICATION",
                                                "TLS_WEB_CLIENT_AUTHENTICATION",
                                                "CODE_SIGNING",
                                                "EMAIL_PROTECTION",
                                                "TIME_STAMPING",
                                                "OCSP_SIGNING",
                                                "IPSEC_END_SYSTEM",
                                                "IPSEC_TUNNEL",
                                                "IPSEC_USER",
                                                "ANY",
                                                "NONE",
                                                "CUSTOM"
                                            ],
                                            "type": "string"
                                        },
                                        "OID": {
                                            "description": "<p>An object identifier (OID) for the extension value. OIDs are strings of numbers separated by periods. The following OIDs are defined in RFC 3280 and RFC 5280. </p> <ul> <li> <p> <code>1.3.6.1.5.5.7.3.1 (TLS_WEB_SERVER_AUTHENTICATION)</code> </p> </li> <li> <p> <code>1.3.6.1.5.5.7.3.2 (TLS_WEB_CLIENT_AUTHENTICATION)</code> </p> </li> <li> <p> <code>1.3.6.1.5.5.7.3.3 (CODE_SIGNING)</code> </p> </li> <li> <p> <code>1.3.6.1.5.5.7.3.4 (EMAIL_PROTECTION)</code> </p> </li> <li> <p> <code>1.3.6.1.5.5.7.3.8 (TIME_STAMPING)</code> </p> </li> <li> <p> <code>1.3.6.1.5.5.7.3.9 (OCSP_SIGNING)</code> </p> </li> <li> <p> <code>1.3.6.1.5.5.7.3.5 (IPSEC_END_SYSTEM)</code> </p> </li> <li> <p> <code>1.3.6.1.5.5.7.3.6 (IPSEC_TUNNEL)</code> </p> </li> <li> <p> <code>1.3.6.1.5.5.7.3.7 (IPSEC_USER)</code> </p> </li> </ul>",
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                },
                                "type": "array"
                            },
                            "FailureReason": {
                                "description": "The reason the certificate request failed. This value exists only when the certificate status is <code>FAILED</code>. For more information, see <a href=\"http://docs.aws.amazon.com/acm/latest/userguide/troubleshooting.html#troubleshooting-failed\">Certificate Request Failed</a> in the <i>AWS Certificate Manager User Guide</i>. ",
                                "enum": [
                                    "NO_AVAILABLE_CONTACTS",
                                    "ADDITIONAL_VERIFICATION_REQUIRED",
                                    "DOMAIN_NOT_ALLOWED",
                                    "INVALID_PUBLIC_DOMAIN",
                                    "CAA_ERROR",
                                    "PCA_LIMIT_EXCEEDED",
                                    "PCA_INVALID_ARN",
                                    "PCA_INVALID_STATE",
                                    "PCA_REQUEST_FAILED",
                                    "PCA_RESOURCE_NOT_FOUND",
                                    "PCA_INVALID_ARGS",
                                    "OTHER"
                                ],
                                "type": "string"
                            },
                            "ImportedAt": {
                                "description": "The date and time at which the certificate was imported. This value exists only when the certificate type is <code>IMPORTED</code>. ",
                                "format": "date-time",
                                "type": "string"
                            },
                            "InUseBy": {
                                "description": "A list of ARNs for the AWS resources that are using the certificate. A certificate can be used by multiple AWS resources. ",
                                "items": {
                                    "type": "string"
                                },
                                "type": "array"
                            },
                            "IssuedAt": {
                                "description": "The time at which the certificate was issued. This value exists only when the certificate type is <code>AMAZON_ISSUED</code>. ",
                                "format": "date-time",
                                "type": "string"
                            },
                            "Issuer": {
                                "description": "The name of the certificate authority that issued and signed the certificate.",
                                "type": "string"
                            },
                            "KeyAlgorithm": {
                                "description": "The algorithm that was used to generate the public-private key pair.",
                                "enum": [
                                    "RSA_2048",
                                    "RSA_1024",
                                    "RSA_4096",
                                    "EC_prime256v1",
                                    "EC_secp384r1",
                                    "EC_secp521r1"
                                ],
                                "type": "string"
                            },
                            "KeyUsages": {
                                "description": "A list of Key Usage X.509 v3 extension objects. Each object is a string value that identifies the purpose of the public key contained in the certificate. Possible extension values include DIGITAL_SIGNATURE, KEY_ENCHIPHERMENT, NON_REPUDIATION, and more.",
                                "items": {
                                    "description": "The Key Usage X.509 v3 extension defines the purpose of the public key contained in the certificate.",
                                    "properties": {
                                        "Name": {
                                            "description": "A string value that contains a Key Usage extension name.",
                                            "enum": [
                                                "DIGITAL_SIGNATURE",
                                                "NON_REPUDIATION",
                                                "KEY_ENCIPHERMENT",
                                                "DATA_ENCIPHERMENT",
                                                "KEY_AGREEMENT",
                                                "CERTIFICATE_SIGNING",
                                                "CRL_SIGNING",
                                                "ENCIPHER_ONLY",
                                                "DECIPHER_ONLY",
                                                "ANY",
                                                "CUSTOM"
                                            ],
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                },
                                "type": "array"
                            },
                            "NotAfter": {
                                "description": "The time after which the certificate is not valid.",
                                "format": "date-time",
                                "type": "string"
                            },
                            "NotBefore": {
                                "description": "The time before which the certificate is not valid.",
                                "format": "date-time",
                                "type": "string"
                            },
                            "Options": {
                                "description": "Value that specifies whether to add the certificate to a transparency log. Certificate transparency makes it possible to detect SSL certificates that have been mistakenly or maliciously issued. A browser might respond to certificate that has not been logged by showing an error message. The logs are cryptographically secure. ",
                                "properties": {
                                    "CertificateTransparencyLoggingPreference": {
                                        "description": "You can opt out of certificate transparency logging by specifying the <code>DISABLED</code> option. Opt in by specifying <code>ENABLED</code>. ",
                                        "enum": [
                                            "ENABLED",
                                            "DISABLED"
                                        ],
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            },
                            "RenewalEligibility": {
                                "description": "Specifies whether the certificate is eligible for renewal.",
                                "enum": [
                                    "ELIGIBLE",
                                    "INELIGIBLE"
                                ],
                                "type": "string"
                            },
                            "RenewalSummary": {
                                "description": "Contains information about the status of ACM's <a href=\"http://docs.aws.amazon.com/acm/latest/userguide/acm-renewal.html\">managed renewal</a> for the certificate. This field exists only when the certificate type is <code>AMAZON_ISSUED</code>.",
                                "properties": {
                                    "DomainValidationOptions": {
                                        "description": "Contains information about the validation of each domain name in the certificate, as it pertains to ACM's <a href=\"http://docs.aws.amazon.com/acm/latest/userguide/acm-renewal.html\">managed renewal</a>. This is different from the initial validation that occurs as a result of the <a>RequestCertificate</a> request. This field exists only when the certificate type is <code>AMAZON_ISSUED</code>.",
                                        "items": {
                                            "description": "Contains information about the validation of each domain name in the certificate.",
                                            "properties": {
                                                "DomainName": {
                                                    "description": "A fully qualified domain name (FQDN) in the certificate. For example, <code>www.example.com</code> or <code>example.com</code>. ",
                                                    "maxLength": 253,
                                                    "minLength": 1,
                                                    "pattern": "^(\\*\\.)?(((?!-)[A-Za-z0-9-]{0,62}[A-Za-z0-9])\\.)+((?!-)[A-Za-z0-9-]{1,62}[A-Za-z0-9])$",
                                                    "type": "string"
                                                },
                                                "ResourceRecord": {
                                                    "description": "Contains the CNAME record that you add to your DNS database for domain validation. For more information, see <a href=\"http://docs.aws.amazon.com/acm/latest/userguide/gs-acm-validate-dns.html\">Use DNS to Validate Domain Ownership</a>.",
                                                    "properties": {
                                                        "Name": {
                                                            "description": "The name of the DNS record to create in your domain. This is supplied by ACM.",
                                                            "type": "string"
                                                        },
                                                        "Type": {
                                                            "description": "The type of DNS record. Currently this can be <code>CNAME</code>.",
                                                            "enum": [
                                                                "CNAME"
                                                            ],
                                                            "type": "string"
                                                        },
                                                        "Value": {
                                                            "description": "The value of the CNAME record to add to your DNS database. This is supplied by ACM.",
                                                            "type": "string"
                                                        }
                                                    },
                                                    "required": [
                                                        "Name",
                                                        "Type",
                                                        "Value"
                                                    ],
                                                    "type": "object"
                                                },
                                                "ValidationDomain": {
                                                    "description": "The domain name that ACM used to send domain validation emails.",
                                                    "maxLength": 253,
                                                    "minLength": 1,
                                                    "pattern": "^(\\*\\.)?(((?!-)[A-Za-z0-9-]{0,62}[A-Za-z0-9])\\.)+((?!-)[A-Za-z0-9-]{1,62}[A-Za-z0-9])$",
                                                    "type": "string"
                                                },
                                                "ValidationEmails": {
                                                    "description": "A list of email addresses that ACM used to send domain validation emails.",
                                                    "items": {
                                                        "type": "string"
                                                    },
                                                    "type": "array"
                                                },
                                                "ValidationMethod": {
                                                    "description": "Specifies the domain validation method.",
                                                    "enum": [
                                                        "EMAIL",
                                                        "DNS"
                                                    ],
                                                    "type": "string"
                                                },
                                                "ValidationStatus": {
                                                    "description": "<p>The validation status of the domain name. This can be one of the following values:</p> <ul> <li> <p> <code>PENDING_VALIDATION</code> </p> </li> <li> <p> <code/>SUCCESS</p> </li> <li> <p> <code/>FAILED</p> </li> </ul>",
                                                    "enum": [
                                                        "PENDING_VALIDATION",
                                                        "SUCCESS",
                                                        "FAILED"
                                                    ],
                                                    "type": "string"
                                                }
                                            },
                                            "required": [
                                                "DomainName"
                                            ],
                                            "type": "object"
                                        },
                                        "maxItems": 1000,
                                        "minItems": 1,
                                        "type": "array"
                                    },
                                    "RenewalStatus": {
                                        "description": "The status of ACM's <a href=\"http://docs.aws.amazon.com/acm/latest/userguide/acm-renewal.html\">managed renewal</a> of the certificate.",
                                        "enum": [
                                            "PENDING_AUTO_RENEWAL",
                                            "PENDING_VALIDATION",
                                            "SUCCESS",
                                            "FAILED"
                                        ],
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "RenewalStatus",
                                    "DomainValidationOptions"
                                ],
                                "type": "object"
                            },
                            "RevocationReason": {
                                "description": "The reason the certificate was revoked. This value exists only when the certificate status is <code>REVOKED</code>. ",
                                "enum": [
                                    "UNSPECIFIED",
                                    "KEY_COMPROMISE",
                                    "CA_COMPROMISE",
                                    "AFFILIATION_CHANGED",
                                    "SUPERCEDED",
                                    "CESSATION_OF_OPERATION",
                                    "CERTIFICATE_HOLD",
                                    "REMOVE_FROM_CRL",
                                    "PRIVILEGE_WITHDRAWN",
                                    "A_A_COMPROMISE"
                                ],
                                "type": "string"
                            },
                            "RevokedAt": {
                                "description": "The time at which the certificate was revoked. This value exists only when the certificate status is <code>REVOKED</code>. ",
                                "format": "date-time",
                                "type": "string"
                            },
                            "Serial": {
                                "description": "The serial number of the certificate.",
                                "type": "string"
                            },
                            "SignatureAlgorithm": {
                                "description": "The algorithm that was used to sign the certificate.",
                                "type": "string"
                            },
                            "Status": {
                                "description": "The status of the certificate.",
                                "enum": [
                                    "PENDING_VALIDATION",
                                    "ISSUED",
                                    "INACTIVE",
                                    "EXPIRED",
                                    "VALIDATION_TIMED_OUT",
                                    "REVOKED",
                                    "FAILED"
                                ],
                                "type": "string"
                            },
                            "Subject": {
                                "description": "The name of the entity that is associated with the public key contained in the certificate.",
                                "type": "string"
                            },
                            "SubjectAlternativeNames": {
                                "description": "One or more domain names (subject alternative names) included in the certificate. This list contains the domain names that are bound to the public key that is contained in the certificate. The subject alternative names include the canonical domain name (CN) of the certificate and additional domain names that can be used to connect to the website. ",
                                "items": {
                                    "maxLength": 253,
                                    "minLength": 1,
                                    "pattern": "^(\\*\\.)?(((?!-)[A-Za-z0-9-]{0,62}[A-Za-z0-9])\\.)+((?!-)[A-Za-z0-9-]{1,62}[A-Za-z0-9])$",
                                    "type": "string"
                                },
                                "maxItems": 100,
                                "minItems": 1,
                                "type": "array"
                            },
                            "Type": {
                                "description": "The source of the certificate. For certificates provided by ACM, this value is <code>AMAZON_ISSUED</code>. For certificates that you imported with <a>ImportCertificate</a>, this value is <code>IMPORTED</code>. ACM does not provide <a href=\"http://docs.aws.amazon.com/acm/latest/userguide/acm-renewal.html\">managed renewal</a> for imported certificates. For more information about the differences between certificates that you import and those that ACM provides, see <a href=\"http://docs.aws.amazon.com/acm/latest/userguide/import-certificate.html\">Importing Certificates</a> in the <i>AWS Certificate Manager User Guide</i>. ",
                                "enum": [
                                    "IMPORTED",
                                    "AMAZON_ISSUED",
                                    "PRIVATE"
                                ],
                                "type": "string"
                            }
                        },
                        "type": "object"
                    }
                },
                "type": "object"
            },
            "DomainList": {
                "items": {
                    "maxLength": 253,
                    "minLength": 1,
                    "pattern": "^(\\*\\.)?(((?!-)[A-Za-z0-9-]{0,62}[A-Za-z0-9])\\.)+((?!-)[A-Za-z0-9-]{1,62}[A-Za-z0-9])$",
                    "type": "string"
                },
                "maxItems": 100,
                "minItems": 1,
                "type": "array"
            },
            "DomainNameString": {
                "maxLength": 253,
                "minLength": 1,
                "pattern": "^(\\*\\.)?(((?!-)[A-Za-z0-9-]{0,62}[A-Za-z0-9])\\.)+((?!-)[A-Za-z0-9-]{1,62}[A-Za-z0-9])$",
                "type": "string"
            },
            "DomainStatus": {
                "enum": [
                    "PENDING_VALIDATION",
                    "SUCCESS",
                    "FAILED"
                ],
                "type": "string"
            },
            "DomainValidation": {
                "description": "Contains information about the validation of each domain name in the certificate.",
                "properties": {
                    "DomainName": {
                        "description": "A fully qualified domain name (FQDN) in the certificate. For example, <code>www.example.com</code> or <code>example.com</code>. ",
                        "maxLength": 253,
                        "minLength": 1,
                        "pattern": "^(\\*\\.)?(((?!-)[A-Za-z0-9-]{0,62}[A-Za-z0-9])\\.)+((?!-)[A-Za-z0-9-]{1,62}[A-Za-z0-9])$",
                        "type": "string"
                    },
                    "ResourceRecord": {
                        "description": "Contains the CNAME record that you add to your DNS database for domain validation. For more information, see <a href=\"http://docs.aws.amazon.com/acm/latest/userguide/gs-acm-validate-dns.html\">Use DNS to Validate Domain Ownership</a>.",
                        "properties": {
                            "Name": {
                                "description": "The name of the DNS record to create in your domain. This is supplied by ACM.",
                                "type": "string"
                            },
                            "Type": {
                                "description": "The type of DNS record. Currently this can be <code>CNAME</code>.",
                                "enum": [
                                    "CNAME"
                                ],
                                "type": "string"
                            },
                            "Value": {
                                "description": "The value of the CNAME record to add to your DNS database. This is supplied by ACM.",
                                "type": "string"
                            }
                        },
                        "required": [
                            "Name",
                            "Type",
                            "Value"
                        ],
                        "type": "object"
                    },
                    "ValidationDomain": {
                        "description": "The domain name that ACM used to send domain validation emails.",
                        "maxLength": 253,
                        "minLength": 1,
                        "pattern": "^(\\*\\.)?(((?!-)[A-Za-z0-9-]{0,62}[A-Za-z0-9])\\.)+((?!-)[A-Za-z0-9-]{1,62}[A-Za-z0-9])$",
                        "type": "string"
                    },
                    "ValidationEmails": {
                        "description": "A list of email addresses that ACM used to send domain validation emails.",
                        "items": {
                            "type": "string"
                        },
                        "type": "array"
                    },
                    "ValidationMethod": {
                        "description": "Specifies the domain validation method.",
                        "enum": [
                            "EMAIL",
                            "DNS"
                        ],
                        "type": "string"
                    },
                    "ValidationStatus": {
                        "description": "<p>The validation status of the domain name. This can be one of the following values:</p> <ul> <li> <p> <code>PENDING_VALIDATION</code> </p> </li> <li> <p> <code/>SUCCESS</p> </li> <li> <p> <code/>FAILED</p> </li> </ul>",
                        "enum": [
                            "PENDING_VALIDATION",
                            "SUCCESS",
                            "FAILED"
                        ],
                        "type": "string"
                    }
                },
                "required": [
                    "DomainName"
                ],
                "type": "object"
            },
            "DomainValidationList": {
                "items": {
                    "description": "Contains information about the validation of each domain name in the certificate.",
                    "properties": {
                        "DomainName": {
                            "description": "A fully qualified domain name (FQDN) in the certificate. For example, <code>www.example.com</code> or <code>example.com</code>. ",
                            "maxLength": 253,
                            "minLength": 1,
                            "pattern": "^(\\*\\.)?(((?!-)[A-Za-z0-9-]{0,62}[A-Za-z0-9])\\.)+((?!-)[A-Za-z0-9-]{1,62}[A-Za-z0-9])$",
                            "type": "string"
                        },
                        "ResourceRecord": {
                            "description": "Contains the CNAME record that you add to your DNS database for domain validation. For more information, see <a href=\"http://docs.aws.amazon.com/acm/latest/userguide/gs-acm-validate-dns.html\">Use DNS to Validate Domain Ownership</a>.",
                            "properties": {
                                "Name": {
                                    "description": "The name of the DNS record to create in your domain. This is supplied by ACM.",
                                    "type": "string"
                                },
                                "Type": {
                                    "description": "The type of DNS record. Currently this can be <code>CNAME</code>.",
                                    "enum": [
                                        "CNAME"
                                    ],
                                    "type": "string"
                                },
                                "Value": {
                                    "description": "The value of the CNAME record to add to your DNS database. This is supplied by ACM.",
                                    "type": "string"
                                }
                            },
                            "required": [
                                "Name",
                                "Type",
                                "Value"
                            ],
                            "type": "object"
                        },
                        "ValidationDomain": {
                            "description": "The domain name that ACM used to send domain validation emails.",
                            "maxLength": 253,
                            "minLength": 1,
                            "pattern": "^(\\*\\.)?(((?!-)[A-Za-z0-9-]{0,62}[A-Za-z0-9])\\.)+((?!-)[A-Za-z0-9-]{1,62}[A-Za-z0-9])$",
                            "type": "string"
                        },
                        "ValidationEmails": {
                            "description": "A list of email addresses that ACM used to send domain validation emails.",
                            "items": {
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "ValidationMethod": {
                            "description": "Specifies the domain validation method.",
                            "enum": [
                                "EMAIL",
                                "DNS"
                            ],
                            "type": "string"
                        },
                        "ValidationStatus": {
                            "description": "<p>The validation status of the domain name. This can be one of the following values:</p> <ul> <li> <p> <code>PENDING_VALIDATION</code> </p> </li> <li> <p> <code/>SUCCESS</p> </li> <li> <p> <code/>FAILED</p> </li> </ul>",
                            "enum": [
                                "PENDING_VALIDATION",
                                "SUCCESS",
                                "FAILED"
                            ],
                            "type": "string"
                        }
                    },
                    "required": [
                        "DomainName"
                    ],
                    "type": "object"
                },
                "maxItems": 1000,
                "minItems": 1,
                "type": "array"
            },
            "DomainValidationOption": {
                "description": "Contains information about the domain names that you want ACM to use to send you emails that enable you to validate domain ownership.",
                "properties": {
                    "DomainName": {
                        "description": "A fully qualified domain name (FQDN) in the certificate request.",
                        "maxLength": 253,
                        "minLength": 1,
                        "pattern": "^(\\*\\.)?(((?!-)[A-Za-z0-9-]{0,62}[A-Za-z0-9])\\.)+((?!-)[A-Za-z0-9-]{1,62}[A-Za-z0-9])$",
                        "type": "string"
                    },
                    "ValidationDomain": {
                        "description": "<p>The domain name that you want ACM to use to send you validation emails. This domain name is the suffix of the email addresses that you want ACM to use. This must be the same as the <code>DomainName</code> value or a superdomain of the <code>DomainName</code> value. For example, if you request a certificate for <code>testing.example.com</code>, you can specify <code>example.com</code> for this value. In that case, ACM sends domain validation emails to the following five addresses:</p> <ul> <li> <p>admin@example.com</p> </li> <li> <p>administrator@example.com</p> </li> <li> <p>hostmaster@example.com</p> </li> <li> <p>postmaster@example.com</p> </li> <li> <p>webmaster@example.com</p> </li> </ul>",
                        "maxLength": 253,
                        "minLength": 1,
                        "pattern": "^(\\*\\.)?(((?!-)[A-Za-z0-9-]{0,62}[A-Za-z0-9])\\.)+((?!-)[A-Za-z0-9-]{1,62}[A-Za-z0-9])$",
                        "type": "string"
                    }
                },
                "required": [
                    "DomainName",
                    "ValidationDomain"
                ],
                "type": "object"
            },
            "DomainValidationOptionList": {
                "items": {
                    "description": "Contains information about the domain names that you want ACM to use to send you emails that enable you to validate domain ownership.",
                    "properties": {
                        "DomainName": {
                            "description": "A fully qualified domain name (FQDN) in the certificate request.",
                            "maxLength": 253,
                            "minLength": 1,
                            "pattern": "^(\\*\\.)?(((?!-)[A-Za-z0-9-]{0,62}[A-Za-z0-9])\\.)+((?!-)[A-Za-z0-9-]{1,62}[A-Za-z0-9])$",
                            "type": "string"
                        },
                        "ValidationDomain": {
                            "description": "<p>The domain name that you want ACM to use to send you validation emails. This domain name is the suffix of the email addresses that you want ACM to use. This must be the same as the <code>DomainName</code> value or a superdomain of the <code>DomainName</code> value. For example, if you request a certificate for <code>testing.example.com</code>, you can specify <code>example.com</code> for this value. In that case, ACM sends domain validation emails to the following five addresses:</p> <ul> <li> <p>admin@example.com</p> </li> <li> <p>administrator@example.com</p> </li> <li> <p>hostmaster@example.com</p> </li> <li> <p>postmaster@example.com</p> </li> <li> <p>webmaster@example.com</p> </li> </ul>",
                            "maxLength": 253,
                            "minLength": 1,
                            "pattern": "^(\\*\\.)?(((?!-)[A-Za-z0-9-]{0,62}[A-Za-z0-9])\\.)+((?!-)[A-Za-z0-9-]{1,62}[A-Za-z0-9])$",
                            "type": "string"
                        }
                    },
                    "required": [
                        "DomainName",
                        "ValidationDomain"
                    ],
                    "type": "object"
                },
                "maxItems": 100,
                "minItems": 1,
                "type": "array"
            },
            "ExportCertificateRequest": {
                "properties": {
                    "CertificateArn": {
                        "description": "<p>An Amazon Resource Name (ARN) of the issued certificate. This must be of the form:</p> <p> <code>arn:aws:acm:region:account:certificate/12345678-1234-1234-1234-123456789012</code> </p>",
                        "maxLength": 2048,
                        "minLength": 20,
                        "pattern": "arn:[\\w+=/,.@-]+:[\\w+=/,.@-]+:[\\w+=/,.@-]*:[0-9]+:[\\w+=,.@-]+(/[\\w+=,.@-]+)*",
                        "type": "string"
                    },
                    "Passphrase": {
                        "description": "<p>Passphrase to associate with the encrypted exported private key. If you want to later decrypt the private key, you must have the passphrase. You can use the following OpenSSL command to decrypt a private key: </p> <p> <code>openssl rsa -in encrypted_key.pem -out decrypted_key.pem</code> </p>",
                        "format": "password",
                        "maxLength": 128,
                        "minLength": 4,
                        "type": "string"
                    }
                },
                "required": [
                    "CertificateArn",
                    "Passphrase"
                ],
                "type": "object"
            },
            "ExportCertificateResponse": {
                "properties": {
                    "Certificate": {
                        "description": "The base64 PEM-encoded certificate.",
                        "maxLength": 32768,
                        "minLength": 1,
                        "pattern": "-{5}BEGIN CERTIFICATE-{5}\\u000D?\\u000A([A-Za-z0-9/+]{64}\\u000D?\\u000A)*[A-Za-z0-9/+]{1,64}={0,2}\\u000D?\\u000A-{5}END CERTIFICATE-{5}(\\u000D?\\u000A)?",
                        "type": "string"
                    },
                    "CertificateChain": {
                        "description": "The base64 PEM-encoded certificate chain. This does not include the certificate that you are exporting.",
                        "maxLength": 2097152,
                        "minLength": 1,
                        "pattern": "(-{5}BEGIN CERTIFICATE-{5}\\u000D?\\u000A([A-Za-z0-9/+]{64}\\u000D?\\u000A)*[A-Za-z0-9/+]{1,64}={0,2}\\u000D?\\u000A-{5}END CERTIFICATE-{5}\\u000D?\\u000A)*-{5}BEGIN CERTIFICATE-{5}\\u000D?\\u000A([A-Za-z0-9/+]{64}\\u000D?\\u000A)*[A-Za-z0-9/+]{1,64}={0,2}\\u000D?\\u000A-{5}END CERTIFICATE-{5}(\\u000D?\\u000A)?",
                        "type": "string"
                    },
                    "PrivateKey": {
                        "description": "The PEM-encoded private key associated with the public key in the certificate.",
                        "format": "password",
                        "maxLength": 524288,
                        "minLength": 1,
                        "pattern": "-{5}BEGIN PRIVATE KEY-{5}\\u000D?\\u000A([A-Za-z0-9/+]{64}\\u000D?\\u000A)*[A-Za-z0-9/+]{1,64}={0,2}\\u000D?\\u000A-{5}END PRIVATE KEY-{5}(\\u000D?\\u000A)?",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "ExtendedKeyUsage": {
                "description": "The Extended Key Usage X.509 v3 extension defines one or more purposes for which the public key can be used. This is in addition to or in place of the basic purposes specified by the Key Usage extension. ",
                "properties": {
                    "Name": {
                        "description": "The name of an Extended Key Usage value.",
                        "enum": [
                            "TLS_WEB_SERVER_AUTHENTICATION",
                            "TLS_WEB_CLIENT_AUTHENTICATION",
                            "CODE_SIGNING",
                            "EMAIL_PROTECTION",
                            "TIME_STAMPING",
                            "OCSP_SIGNING",
                            "IPSEC_END_SYSTEM",
                            "IPSEC_TUNNEL",
                            "IPSEC_USER",
                            "ANY",
                            "NONE",
                            "CUSTOM"
                        ],
                        "type": "string"
                    },
                    "OID": {
                        "description": "<p>An object identifier (OID) for the extension value. OIDs are strings of numbers separated by periods. The following OIDs are defined in RFC 3280 and RFC 5280. </p> <ul> <li> <p> <code>1.3.6.1.5.5.7.3.1 (TLS_WEB_SERVER_AUTHENTICATION)</code> </p> </li> <li> <p> <code>1.3.6.1.5.5.7.3.2 (TLS_WEB_CLIENT_AUTHENTICATION)</code> </p> </li> <li> <p> <code>1.3.6.1.5.5.7.3.3 (CODE_SIGNING)</code> </p> </li> <li> <p> <code>1.3.6.1.5.5.7.3.4 (EMAIL_PROTECTION)</code> </p> </li> <li> <p> <code>1.3.6.1.5.5.7.3.8 (TIME_STAMPING)</code> </p> </li> <li> <p> <code>1.3.6.1.5.5.7.3.9 (OCSP_SIGNING)</code> </p> </li> <li> <p> <code>1.3.6.1.5.5.7.3.5 (IPSEC_END_SYSTEM)</code> </p> </li> <li> <p> <code>1.3.6.1.5.5.7.3.6 (IPSEC_TUNNEL)</code> </p> </li> <li> <p> <code>1.3.6.1.5.5.7.3.7 (IPSEC_USER)</code> </p> </li> </ul>",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "ExtendedKeyUsageFilterList": {
                "items": {
                    "enum": [
                        "TLS_WEB_SERVER_AUTHENTICATION",
                        "TLS_WEB_CLIENT_AUTHENTICATION",
                        "CODE_SIGNING",
                        "EMAIL_PROTECTION",
                        "TIME_STAMPING",
                        "OCSP_SIGNING",
                        "IPSEC_END_SYSTEM",
                        "IPSEC_TUNNEL",
                        "IPSEC_USER",
                        "ANY",
                        "NONE",
                        "CUSTOM"
                    ],
                    "type": "string"
                },
                "type": "array"
            },
            "ExtendedKeyUsageList": {
                "items": {
                    "description": "The Extended Key Usage X.509 v3 extension defines one or more purposes for which the public key can be used. This is in addition to or in place of the basic purposes specified by the Key Usage extension. ",
                    "properties": {
                        "Name": {
                            "description": "The name of an Extended Key Usage value.",
                            "enum": [
                                "TLS_WEB_SERVER_AUTHENTICATION",
                                "TLS_WEB_CLIENT_AUTHENTICATION",
                                "CODE_SIGNING",
                                "EMAIL_PROTECTION",
                                "TIME_STAMPING",
                                "OCSP_SIGNING",
                                "IPSEC_END_SYSTEM",
                                "IPSEC_TUNNEL",
                                "IPSEC_USER",
                                "ANY",
                                "NONE",
                                "CUSTOM"
                            ],
                            "type": "string"
                        },
                        "OID": {
                            "description": "<p>An object identifier (OID) for the extension value. OIDs are strings of numbers separated by periods. The following OIDs are defined in RFC 3280 and RFC 5280. </p> <ul> <li> <p> <code>1.3.6.1.5.5.7.3.1 (TLS_WEB_SERVER_AUTHENTICATION)</code> </p> </li> <li> <p> <code>1.3.6.1.5.5.7.3.2 (TLS_WEB_CLIENT_AUTHENTICATION)</code> </p> </li> <li> <p> <code>1.3.6.1.5.5.7.3.3 (CODE_SIGNING)</code> </p> </li> <li> <p> <code>1.3.6.1.5.5.7.3.4 (EMAIL_PROTECTION)</code> </p> </li> <li> <p> <code>1.3.6.1.5.5.7.3.8 (TIME_STAMPING)</code> </p> </li> <li> <p> <code>1.3.6.1.5.5.7.3.9 (OCSP_SIGNING)</code> </p> </li> <li> <p> <code>1.3.6.1.5.5.7.3.5 (IPSEC_END_SYSTEM)</code> </p> </li> <li> <p> <code>1.3.6.1.5.5.7.3.6 (IPSEC_TUNNEL)</code> </p> </li> <li> <p> <code>1.3.6.1.5.5.7.3.7 (IPSEC_USER)</code> </p> </li> </ul>",
                            "type": "string"
                        }
                    },
                    "type": "object"
                },
                "type": "array"
            },
            "ExtendedKeyUsageName": {
                "enum": [
                    "TLS_WEB_SERVER_AUTHENTICATION",
                    "TLS_WEB_CLIENT_AUTHENTICATION",
                    "CODE_SIGNING",
                    "EMAIL_PROTECTION",
                    "TIME_STAMPING",
                    "OCSP_SIGNING",
                    "IPSEC_END_SYSTEM",
                    "IPSEC_TUNNEL",
                    "IPSEC_USER",
                    "ANY",
                    "NONE",
                    "CUSTOM"
                ],
                "type": "string"
            },
            "FailureReason": {
                "enum": [
                    "NO_AVAILABLE_CONTACTS",
                    "ADDITIONAL_VERIFICATION_REQUIRED",
                    "DOMAIN_NOT_ALLOWED",
                    "INVALID_PUBLIC_DOMAIN",
                    "CAA_ERROR",
                    "PCA_LIMIT_EXCEEDED",
                    "PCA_INVALID_ARN",
                    "PCA_INVALID_STATE",
                    "PCA_REQUEST_FAILED",
                    "PCA_RESOURCE_NOT_FOUND",
                    "PCA_INVALID_ARGS",
                    "OTHER"
                ],
                "type": "string"
            },
            "Filters": {
                "description": "This structure can be used in the <a>ListCertificates</a> action to filter the output of the certificate list. ",
                "properties": {
                    "extendedKeyUsage": {
                        "description": "Specify one or more <a>ExtendedKeyUsage</a> extension values.",
                        "items": {
                            "enum": [
                                "TLS_WEB_SERVER_AUTHENTICATION",
                                "TLS_WEB_CLIENT_AUTHENTICATION",
                                "CODE_SIGNING",
                                "EMAIL_PROTECTION",
                                "TIME_STAMPING",
                                "OCSP_SIGNING",
                                "IPSEC_END_SYSTEM",
                                "IPSEC_TUNNEL",
                                "IPSEC_USER",
                                "ANY",
                                "NONE",
                                "CUSTOM"
                            ],
                            "type": "string"
                        },
                        "type": "array"
                    },
                    "keyTypes": {
                        "description": "Specify one or more algorithms that can be used to generate key pairs.",
                        "items": {
                            "enum": [
                                "RSA_2048",
                                "RSA_1024",
                                "RSA_4096",
                                "EC_prime256v1",
                                "EC_secp384r1",
                                "EC_secp521r1"
                            ],
                            "type": "string"
                        },
                        "type": "array"
                    },
                    "keyUsage": {
                        "description": "Specify one or more <a>KeyUsage</a> extension values.",
                        "items": {
                            "enum": [
                                "DIGITAL_SIGNATURE",
                                "NON_REPUDIATION",
                                "KEY_ENCIPHERMENT",
                                "DATA_ENCIPHERMENT",
                                "KEY_AGREEMENT",
                                "CERTIFICATE_SIGNING",
                                "CRL_SIGNING",
                                "ENCIPHER_ONLY",
                                "DECIPHER_ONLY",
                                "ANY",
                                "CUSTOM"
                            ],
                            "type": "string"
                        },
                        "type": "array"
                    }
                },
                "type": "object"
            },
            "GetCertificateRequest": {
                "properties": {
                    "CertificateArn": {
                        "description": "<p>String that contains a certificate ARN in the following format:</p> <p> <code>arn:aws:acm:region:123456789012:certificate/12345678-1234-1234-1234-123456789012</code> </p> <p>For more information about ARNs, see <a href=\"http://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html\">Amazon Resource Names (ARNs) and AWS Service Namespaces</a>.</p>",
                        "maxLength": 2048,
                        "minLength": 20,
                        "pattern": "arn:[\\w+=/,.@-]+:[\\w+=/,.@-]+:[\\w+=/,.@-]*:[0-9]+:[\\w+=,.@-]+(/[\\w+=,.@-]+)*",
                        "type": "string"
                    }
                },
                "required": [
                    "CertificateArn"
                ],
                "type": "object"
            },
            "GetCertificateResponse": {
                "properties": {
                    "Certificate": {
                        "description": "String that contains the ACM certificate represented by the ARN specified at input.",
                        "maxLength": 32768,
                        "minLength": 1,
                        "pattern": "-{5}BEGIN CERTIFICATE-{5}\\u000D?\\u000A([A-Za-z0-9/+]{64}\\u000D?\\u000A)*[A-Za-z0-9/+]{1,64}={0,2}\\u000D?\\u000A-{5}END CERTIFICATE-{5}(\\u000D?\\u000A)?",
                        "type": "string"
                    },
                    "CertificateChain": {
                        "description": "The certificate chain that contains the root certificate issued by the certificate authority (CA).",
                        "maxLength": 2097152,
                        "minLength": 1,
                        "pattern": "(-{5}BEGIN CERTIFICATE-{5}\\u000D?\\u000A([A-Za-z0-9/+]{64}\\u000D?\\u000A)*[A-Za-z0-9/+]{1,64}={0,2}\\u000D?\\u000A-{5}END CERTIFICATE-{5}\\u000D?\\u000A)*-{5}BEGIN CERTIFICATE-{5}\\u000D?\\u000A([A-Za-z0-9/+]{64}\\u000D?\\u000A)*[A-Za-z0-9/+]{1,64}={0,2}\\u000D?\\u000A-{5}END CERTIFICATE-{5}(\\u000D?\\u000A)?",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "IdempotencyToken": {
                "maxLength": 32,
                "minLength": 1,
                "pattern": "\\w+",
                "type": "string"
            },
            "ImportCertificateRequest": {
                "properties": {
                    "Certificate": {
                        "description": "The certificate to import.",
                        "maxLength": 32768,
                        "minLength": 1,
                        "type": "string"
                    },
                    "CertificateArn": {
                        "description": "The <a href=\"http://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html\">Amazon Resource Name (ARN)</a> of an imported certificate to replace. To import a new certificate, omit this field. ",
                        "maxLength": 2048,
                        "minLength": 20,
                        "pattern": "arn:[\\w+=/,.@-]+:[\\w+=/,.@-]+:[\\w+=/,.@-]*:[0-9]+:[\\w+=,.@-]+(/[\\w+=,.@-]+)*",
                        "type": "string"
                    },
                    "CertificateChain": {
                        "description": "The PEM encoded certificate chain.",
                        "maxLength": 2097152,
                        "minLength": 1,
                        "type": "string"
                    },
                    "PrivateKey": {
                        "description": "The private key that matches the public key in the certificate.",
                        "format": "password",
                        "maxLength": 524288,
                        "minLength": 1,
                        "type": "string"
                    }
                },
                "required": [
                    "Certificate",
                    "PrivateKey"
                ],
                "type": "object"
            },
            "ImportCertificateResponse": {
                "properties": {
                    "CertificateArn": {
                        "description": "The <a href=\"http://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html\">Amazon Resource Name (ARN)</a> of the imported certificate.",
                        "maxLength": 2048,
                        "minLength": 20,
                        "pattern": "arn:[\\w+=/,.@-]+:[\\w+=/,.@-]+:[\\w+=/,.@-]*:[0-9]+:[\\w+=,.@-]+(/[\\w+=,.@-]+)*",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "InUseList": {
                "items": {
                    "type": "string"
                },
                "type": "array"
            },
            "InvalidArnException": {
                "description": "The requested Amazon Resource Name (ARN) does not refer to an existing resource.",
                "properties": {
                    "message": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "InvalidDomainValidationOptionsException": {
                "description": "One or more values in the <a>DomainValidationOption</a> structure is incorrect.",
                "properties": {
                    "message": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "InvalidStateException": {
                "description": "Processing has reached an invalid state.",
                "properties": {
                    "message": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "InvalidTagException": {
                "description": "One or both of the values that make up the key-value pair is not valid. For example, you cannot specify a tag value that begins with <code>aws:</code>.",
                "properties": {
                    "message": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "KeyAlgorithm": {
                "enum": [
                    "RSA_2048",
                    "RSA_1024",
                    "RSA_4096",
                    "EC_prime256v1",
                    "EC_secp384r1",
                    "EC_secp521r1"
                ],
                "type": "string"
            },
            "KeyAlgorithmList": {
                "items": {
                    "enum": [
                        "RSA_2048",
                        "RSA_1024",
                        "RSA_4096",
                        "EC_prime256v1",
                        "EC_secp384r1",
                        "EC_secp521r1"
                    ],
                    "type": "string"
                },
                "type": "array"
            },
            "KeyUsage": {
                "description": "The Key Usage X.509 v3 extension defines the purpose of the public key contained in the certificate.",
                "properties": {
                    "Name": {
                        "description": "A string value that contains a Key Usage extension name.",
                        "enum": [
                            "DIGITAL_SIGNATURE",
                            "NON_REPUDIATION",
                            "KEY_ENCIPHERMENT",
                            "DATA_ENCIPHERMENT",
                            "KEY_AGREEMENT",
                            "CERTIFICATE_SIGNING",
                            "CRL_SIGNING",
                            "ENCIPHER_ONLY",
                            "DECIPHER_ONLY",
                            "ANY",
                            "CUSTOM"
                        ],
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "KeyUsageFilterList": {
                "items": {
                    "enum": [
                        "DIGITAL_SIGNATURE",
                        "NON_REPUDIATION",
                        "KEY_ENCIPHERMENT",
                        "DATA_ENCIPHERMENT",
                        "KEY_AGREEMENT",
                        "CERTIFICATE_SIGNING",
                        "CRL_SIGNING",
                        "ENCIPHER_ONLY",
                        "DECIPHER_ONLY",
                        "ANY",
                        "CUSTOM"
                    ],
                    "type": "string"
                },
                "type": "array"
            },
            "KeyUsageList": {
                "items": {
                    "description": "The Key Usage X.509 v3 extension defines the purpose of the public key contained in the certificate.",
                    "properties": {
                        "Name": {
                            "description": "A string value that contains a Key Usage extension name.",
                            "enum": [
                                "DIGITAL_SIGNATURE",
                                "NON_REPUDIATION",
                                "KEY_ENCIPHERMENT",
                                "DATA_ENCIPHERMENT",
                                "KEY_AGREEMENT",
                                "CERTIFICATE_SIGNING",
                                "CRL_SIGNING",
                                "ENCIPHER_ONLY",
                                "DECIPHER_ONLY",
                                "ANY",
                                "CUSTOM"
                            ],
                            "type": "string"
                        }
                    },
                    "type": "object"
                },
                "type": "array"
            },
            "KeyUsageName": {
                "enum": [
                    "DIGITAL_SIGNATURE",
                    "NON_REPUDIATION",
                    "KEY_ENCIPHERMENT",
                    "DATA_ENCIPHERMENT",
                    "KEY_AGREEMENT",
                    "CERTIFICATE_SIGNING",
                    "CRL_SIGNING",
                    "ENCIPHER_ONLY",
                    "DECIPHER_ONLY",
                    "ANY",
                    "CUSTOM"
                ],
                "type": "string"
            },
            "LimitExceededException": {
                "description": "An ACM limit has been exceeded.",
                "properties": {
                    "message": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "ListCertificatesRequest": {
                "properties": {
                    "CertificateStatuses": {
                        "description": "Filter the certificate list by status value.",
                        "items": {
                            "enum": [
                                "PENDING_VALIDATION",
                                "ISSUED",
                                "INACTIVE",
                                "EXPIRED",
                                "VALIDATION_TIMED_OUT",
                                "REVOKED",
                                "FAILED"
                            ],
                            "type": "string"
                        },
                        "type": "array"
                    },
                    "Includes": {
                        "description": "Filter the certificate list. For more information, see the <a>Filters</a> structure.",
                        "properties": {
                            "extendedKeyUsage": {
                                "description": "Specify one or more <a>ExtendedKeyUsage</a> extension values.",
                                "items": {
                                    "enum": [
                                        "TLS_WEB_SERVER_AUTHENTICATION",
                                        "TLS_WEB_CLIENT_AUTHENTICATION",
                                        "CODE_SIGNING",
                                        "EMAIL_PROTECTION",
                                        "TIME_STAMPING",
                                        "OCSP_SIGNING",
                                        "IPSEC_END_SYSTEM",
                                        "IPSEC_TUNNEL",
                                        "IPSEC_USER",
                                        "ANY",
                                        "NONE",
                                        "CUSTOM"
                                    ],
                                    "type": "string"
                                },
                                "type": "array"
                            },
                            "keyTypes": {
                                "description": "Specify one or more algorithms that can be used to generate key pairs.",
                                "items": {
                                    "enum": [
                                        "RSA_2048",
                                        "RSA_1024",
                                        "RSA_4096",
                                        "EC_prime256v1",
                                        "EC_secp384r1",
                                        "EC_secp521r1"
                                    ],
                                    "type": "string"
                                },
                                "type": "array"
                            },
                            "keyUsage": {
                                "description": "Specify one or more <a>KeyUsage</a> extension values.",
                                "items": {
                                    "enum": [
                                        "DIGITAL_SIGNATURE",
                                        "NON_REPUDIATION",
                                        "KEY_ENCIPHERMENT",
                                        "DATA_ENCIPHERMENT",
                                        "KEY_AGREEMENT",
                                        "CERTIFICATE_SIGNING",
                                        "CRL_SIGNING",
                                        "ENCIPHER_ONLY",
                                        "DECIPHER_ONLY",
                                        "ANY",
                                        "CUSTOM"
                                    ],
                                    "type": "string"
                                },
                                "type": "array"
                            }
                        },
                        "type": "object"
                    },
                    "MaxItems": {
                        "description": "Use this parameter when paginating results to specify the maximum number of items to return in the response. If additional items exist beyond the number you specify, the <code>NextToken</code> element is sent in the response. Use this <code>NextToken</code> value in a subsequent request to retrieve additional items.",
                        "maximum": 1000,
                        "minimum": 1,
                        "type": "integer"
                    },
                    "NextToken": {
                        "description": "Use this parameter only when paginating results and only in a subsequent request after you receive a response with truncated results. Set it to the value of <code>NextToken</code> from the response you just received.",
                        "maxLength": 320,
                        "minLength": 1,
                        "pattern": "[\\u0009\\u000A\\u000D\\u0020-\\u00FF]*",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "ListCertificatesResponse": {
                "properties": {
                    "CertificateSummaryList": {
                        "description": "A list of ACM certificates.",
                        "items": {
                            "description": "This structure is returned in the response object of <a>ListCertificates</a> action. ",
                            "properties": {
                                "CertificateArn": {
                                    "description": "<p>Amazon Resource Name (ARN) of the certificate. This is of the form:</p> <p> <code>arn:aws:acm:region:123456789012:certificate/12345678-1234-1234-1234-123456789012</code> </p> <p>For more information about ARNs, see <a href=\"http://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html\">Amazon Resource Names (ARNs) and AWS Service Namespaces</a>. </p>",
                                    "maxLength": 2048,
                                    "minLength": 20,
                                    "pattern": "arn:[\\w+=/,.@-]+:[\\w+=/,.@-]+:[\\w+=/,.@-]*:[0-9]+:[\\w+=,.@-]+(/[\\w+=,.@-]+)*",
                                    "type": "string"
                                },
                                "DomainName": {
                                    "description": "Fully qualified domain name (FQDN), such as www.example.com or example.com, for the certificate.",
                                    "maxLength": 253,
                                    "minLength": 1,
                                    "pattern": "^(\\*\\.)?(((?!-)[A-Za-z0-9-]{0,62}[A-Za-z0-9])\\.)+((?!-)[A-Za-z0-9-]{1,62}[A-Za-z0-9])$",
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        },
                        "type": "array"
                    },
                    "NextToken": {
                        "description": "When the list is truncated, this value is present and contains the value to use for the <code>NextToken</code> parameter in a subsequent pagination request.",
                        "maxLength": 320,
                        "minLength": 1,
                        "pattern": "[\\u0009\\u000A\\u000D\\u0020-\\u00FF]*",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "ListTagsForCertificateRequest": {
                "properties": {
                    "CertificateArn": {
                        "description": "<p>String that contains the ARN of the ACM certificate for which you want to list the tags. This must have the following form:</p> <p> <code>arn:aws:acm:region:123456789012:certificate/12345678-1234-1234-1234-123456789012</code> </p> <p>For more information about ARNs, see <a href=\"http://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html\">Amazon Resource Names (ARNs) and AWS Service Namespaces</a>. </p>",
                        "maxLength": 2048,
                        "minLength": 20,
                        "pattern": "arn:[\\w+=/,.@-]+:[\\w+=/,.@-]+:[\\w+=/,.@-]*:[0-9]+:[\\w+=,.@-]+(/[\\w+=,.@-]+)*",
                        "type": "string"
                    }
                },
                "required": [
                    "CertificateArn"
                ],
                "type": "object"
            },
            "ListTagsForCertificateResponse": {
                "properties": {
                    "Tags": {
                        "description": "The key-value pairs that define the applied tags.",
                        "items": {
                            "description": "A key-value pair that identifies or specifies metadata about an ACM resource.",
                            "properties": {
                                "Key": {
                                    "description": "The key of the tag.",
                                    "maxLength": 128,
                                    "minLength": 1,
                                    "pattern": "[\\p{L}\\p{Z}\\p{N}_.:\\/=+\\-@]*",
                                    "type": "string"
                                },
                                "Value": {
                                    "description": "The value of the tag.",
                                    "maxLength": 256,
                                    "minLength": 0,
                                    "pattern": "[\\p{L}\\p{Z}\\p{N}_.:\\/=+\\-@]*",
                                    "type": "string"
                                }
                            },
                            "required": [
                                "Key"
                            ],
                            "type": "object"
                        },
                        "maxItems": 50,
                        "minItems": 1,
                        "type": "array"
                    }
                },
                "type": "object"
            },
            "MaxItems": {
                "maximum": 1000,
                "minimum": 1,
                "type": "integer"
            },
            "NextToken": {
                "maxLength": 320,
                "minLength": 1,
                "pattern": "[\\u0009\\u000A\\u000D\\u0020-\\u00FF]*",
                "type": "string"
            },
            "PassphraseBlob": {
                "format": "password",
                "maxLength": 128,
                "minLength": 4,
                "type": "string"
            },
            "PrivateKey": {
                "format": "password",
                "maxLength": 524288,
                "minLength": 1,
                "pattern": "-{5}BEGIN PRIVATE KEY-{5}\\u000D?\\u000A([A-Za-z0-9/+]{64}\\u000D?\\u000A)*[A-Za-z0-9/+]{1,64}={0,2}\\u000D?\\u000A-{5}END PRIVATE KEY-{5}(\\u000D?\\u000A)?",
                "type": "string"
            },
            "PrivateKeyBlob": {
                "format": "password",
                "maxLength": 524288,
                "minLength": 1,
                "type": "string"
            },
            "RecordType": {
                "enum": [
                    "CNAME"
                ],
                "type": "string"
            },
            "RemoveTagsFromCertificateRequest": {
                "properties": {
                    "CertificateArn": {
                        "description": "<p>String that contains the ARN of the ACM Certificate with one or more tags that you want to remove. This must be of the form:</p> <p> <code>arn:aws:acm:region:123456789012:certificate/12345678-1234-1234-1234-123456789012</code> </p> <p>For more information about ARNs, see <a href=\"http://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html\">Amazon Resource Names (ARNs) and AWS Service Namespaces</a>. </p>",
                        "maxLength": 2048,
                        "minLength": 20,
                        "pattern": "arn:[\\w+=/,.@-]+:[\\w+=/,.@-]+:[\\w+=/,.@-]*:[0-9]+:[\\w+=,.@-]+(/[\\w+=,.@-]+)*",
                        "type": "string"
                    },
                    "Tags": {
                        "description": "The key-value pair that defines the tag to remove.",
                        "items": {
                            "description": "A key-value pair that identifies or specifies metadata about an ACM resource.",
                            "properties": {
                                "Key": {
                                    "description": "The key of the tag.",
                                    "maxLength": 128,
                                    "minLength": 1,
                                    "pattern": "[\\p{L}\\p{Z}\\p{N}_.:\\/=+\\-@]*",
                                    "type": "string"
                                },
                                "Value": {
                                    "description": "The value of the tag.",
                                    "maxLength": 256,
                                    "minLength": 0,
                                    "pattern": "[\\p{L}\\p{Z}\\p{N}_.:\\/=+\\-@]*",
                                    "type": "string"
                                }
                            },
                            "required": [
                                "Key"
                            ],
                            "type": "object"
                        },
                        "maxItems": 50,
                        "minItems": 1,
                        "type": "array"
                    }
                },
                "required": [
                    "CertificateArn",
                    "Tags"
                ],
                "type": "object"
            },
            "RenewalEligibility": {
                "enum": [
                    "ELIGIBLE",
                    "INELIGIBLE"
                ],
                "type": "string"
            },
            "RenewalStatus": {
                "enum": [
                    "PENDING_AUTO_RENEWAL",
                    "PENDING_VALIDATION",
                    "SUCCESS",
                    "FAILED"
                ],
                "type": "string"
            },
            "RenewalSummary": {
                "description": "Contains information about the status of ACM's <a href=\"http://docs.aws.amazon.com/acm/latest/userguide/acm-renewal.html\">managed renewal</a> for the certificate. This structure exists only when the certificate type is <code>AMAZON_ISSUED</code>.",
                "properties": {
                    "DomainValidationOptions": {
                        "description": "Contains information about the validation of each domain name in the certificate, as it pertains to ACM's <a href=\"http://docs.aws.amazon.com/acm/latest/userguide/acm-renewal.html\">managed renewal</a>. This is different from the initial validation that occurs as a result of the <a>RequestCertificate</a> request. This field exists only when the certificate type is <code>AMAZON_ISSUED</code>.",
                        "items": {
                            "description": "Contains information about the validation of each domain name in the certificate.",
                            "properties": {
                                "DomainName": {
                                    "description": "A fully qualified domain name (FQDN) in the certificate. For example, <code>www.example.com</code> or <code>example.com</code>. ",
                                    "maxLength": 253,
                                    "minLength": 1,
                                    "pattern": "^(\\*\\.)?(((?!-)[A-Za-z0-9-]{0,62}[A-Za-z0-9])\\.)+((?!-)[A-Za-z0-9-]{1,62}[A-Za-z0-9])$",
                                    "type": "string"
                                },
                                "ResourceRecord": {
                                    "description": "Contains the CNAME record that you add to your DNS database for domain validation. For more information, see <a href=\"http://docs.aws.amazon.com/acm/latest/userguide/gs-acm-validate-dns.html\">Use DNS to Validate Domain Ownership</a>.",
                                    "properties": {
                                        "Name": {
                                            "description": "The name of the DNS record to create in your domain. This is supplied by ACM.",
                                            "type": "string"
                                        },
                                        "Type": {
                                            "description": "The type of DNS record. Currently this can be <code>CNAME</code>.",
                                            "enum": [
                                                "CNAME"
                                            ],
                                            "type": "string"
                                        },
                                        "Value": {
                                            "description": "The value of the CNAME record to add to your DNS database. This is supplied by ACM.",
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "Name",
                                        "Type",
                                        "Value"
                                    ],
                                    "type": "object"
                                },
                                "ValidationDomain": {
                                    "description": "The domain name that ACM used to send domain validation emails.",
                                    "maxLength": 253,
                                    "minLength": 1,
                                    "pattern": "^(\\*\\.)?(((?!-)[A-Za-z0-9-]{0,62}[A-Za-z0-9])\\.)+((?!-)[A-Za-z0-9-]{1,62}[A-Za-z0-9])$",
                                    "type": "string"
                                },
                                "ValidationEmails": {
                                    "description": "A list of email addresses that ACM used to send domain validation emails.",
                                    "items": {
                                        "type": "string"
                                    },
                                    "type": "array"
                                },
                                "ValidationMethod": {
                                    "description": "Specifies the domain validation method.",
                                    "enum": [
                                        "EMAIL",
                                        "DNS"
                                    ],
                                    "type": "string"
                                },
                                "ValidationStatus": {
                                    "description": "<p>The validation status of the domain name. This can be one of the following values:</p> <ul> <li> <p> <code>PENDING_VALIDATION</code> </p> </li> <li> <p> <code/>SUCCESS</p> </li> <li> <p> <code/>FAILED</p> </li> </ul>",
                                    "enum": [
                                        "PENDING_VALIDATION",
                                        "SUCCESS",
                                        "FAILED"
                                    ],
                                    "type": "string"
                                }
                            },
                            "required": [
                                "DomainName"
                            ],
                            "type": "object"
                        },
                        "maxItems": 1000,
                        "minItems": 1,
                        "type": "array"
                    },
                    "RenewalStatus": {
                        "description": "The status of ACM's <a href=\"http://docs.aws.amazon.com/acm/latest/userguide/acm-renewal.html\">managed renewal</a> of the certificate.",
                        "enum": [
                            "PENDING_AUTO_RENEWAL",
                            "PENDING_VALIDATION",
                            "SUCCESS",
                            "FAILED"
                        ],
                        "type": "string"
                    }
                },
                "required": [
                    "RenewalStatus",
                    "DomainValidationOptions"
                ],
                "type": "object"
            },
            "RequestCertificateRequest": {
                "properties": {
                    "CertificateAuthorityArn": {
                        "description": "<p>The Amazon Resource Name (ARN) of the private certificate authority (CA) that will be used to issue the certificate. If you do not provide an ARN and you are trying to request a private certificate, ACM will attempt to issue a public certificate. For more information about private CAs, see the <a href=\"http://docs.aws.amazon.com/acm-pca/latest/userguide/PcaWelcome.html\">AWS Certificate Manager Private Certificate Authority (PCA)</a> user guide. The ARN must have the following form: </p> <p> <code>arn:aws:acm-pca:region:account:certificate-authority/12345678-1234-1234-1234-123456789012</code> </p>",
                        "maxLength": 2048,
                        "minLength": 20,
                        "pattern": "arn:[\\w+=/,.@-]+:[\\w+=/,.@-]+:[\\w+=/,.@-]*:[0-9]+:[\\w+=,.@-]+(/[\\w+=,.@-]+)*",
                        "type": "string"
                    },
                    "DomainName": {
                        "description": "<p> Fully qualified domain name (FQDN), such as www.example.com, that you want to secure with an ACM certificate. Use an asterisk (*) to create a wildcard certificate that protects several sites in the same domain. For example, *.example.com protects www.example.com, site.example.com, and images.example.com. </p> <p> The first domain name you enter cannot exceed 63 octets, including periods. Each subsequent Subject Alternative Name (SAN), however, can be up to 253 octets in length. </p>",
                        "maxLength": 253,
                        "minLength": 1,
                        "pattern": "^(\\*\\.)?(((?!-)[A-Za-z0-9-]{0,62}[A-Za-z0-9])\\.)+((?!-)[A-Za-z0-9-]{1,62}[A-Za-z0-9])$",
                        "type": "string"
                    },
                    "DomainValidationOptions": {
                        "description": "The domain name that you want ACM to use to send you emails so that you can validate domain ownership.",
                        "items": {
                            "description": "Contains information about the domain names that you want ACM to use to send you emails that enable you to validate domain ownership.",
                            "properties": {
                                "DomainName": {
                                    "description": "A fully qualified domain name (FQDN) in the certificate request.",
                                    "maxLength": 253,
                                    "minLength": 1,
                                    "pattern": "^(\\*\\.)?(((?!-)[A-Za-z0-9-]{0,62}[A-Za-z0-9])\\.)+((?!-)[A-Za-z0-9-]{1,62}[A-Za-z0-9])$",
                                    "type": "string"
                                },
                                "ValidationDomain": {
                                    "description": "<p>The domain name that you want ACM to use to send you validation emails. This domain name is the suffix of the email addresses that you want ACM to use. This must be the same as the <code>DomainName</code> value or a superdomain of the <code>DomainName</code> value. For example, if you request a certificate for <code>testing.example.com</code>, you can specify <code>example.com</code> for this value. In that case, ACM sends domain validation emails to the following five addresses:</p> <ul> <li> <p>admin@example.com</p> </li> <li> <p>administrator@example.com</p> </li> <li> <p>hostmaster@example.com</p> </li> <li> <p>postmaster@example.com</p> </li> <li> <p>webmaster@example.com</p> </li> </ul>",
                                    "maxLength": 253,
                                    "minLength": 1,
                                    "pattern": "^(\\*\\.)?(((?!-)[A-Za-z0-9-]{0,62}[A-Za-z0-9])\\.)+((?!-)[A-Za-z0-9-]{1,62}[A-Za-z0-9])$",
                                    "type": "string"
                                }
                            },
                            "required": [
                                "DomainName",
                                "ValidationDomain"
                            ],
                            "type": "object"
                        },
                        "maxItems": 100,
                        "minItems": 1,
                        "type": "array"
                    },
                    "IdempotencyToken": {
                        "description": "Customer chosen string that can be used to distinguish between calls to <code>RequestCertificate</code>. Idempotency tokens time out after one hour. Therefore, if you call <code>RequestCertificate</code> multiple times with the same idempotency token within one hour, ACM recognizes that you are requesting only one certificate and will issue only one. If you change the idempotency token for each call, ACM recognizes that you are requesting multiple certificates.",
                        "maxLength": 32,
                        "minLength": 1,
                        "pattern": "\\w+",
                        "type": "string"
                    },
                    "Options": {
                        "description": "Currently, you can use this parameter to specify whether to add the certificate to a certificate transparency log. Certificate transparency makes it possible to detect SSL/TLS certificates that have been mistakenly or maliciously issued. Certificates that have not been logged typically produce an error message in a browser. For more information, see <a href=\"http://docs.aws.amazon.com/acm/latest/userguide/acm-bestpractices.html#best-practices-transparency\">Opting Out of Certificate Transparency Logging</a>.",
                        "properties": {
                            "CertificateTransparencyLoggingPreference": {
                                "description": "You can opt out of certificate transparency logging by specifying the <code>DISABLED</code> option. Opt in by specifying <code>ENABLED</code>. ",
                                "enum": [
                                    "ENABLED",
                                    "DISABLED"
                                ],
                                "type": "string"
                            }
                        },
                        "type": "object"
                    },
                    "SubjectAlternativeNames": {
                        "description": "<p>Additional FQDNs to be included in the Subject Alternative Name extension of the ACM certificate. For example, add the name www.example.net to a certificate for which the <code>DomainName</code> field is www.example.com if users can reach your site by using either name. The maximum number of domain names that you can add to an ACM certificate is 100. However, the initial limit is 10 domain names. If you need more than 10 names, you must request a limit increase. For more information, see <a href=\"http://docs.aws.amazon.com/acm/latest/userguide/acm-limits.html\">Limits</a>.</p> <p> The maximum length of a SAN DNS name is 253 octets. The name is made up of multiple labels separated by periods. No label can be longer than 63 octets. Consider the following examples: </p> <ul> <li> <p> <code>(63 octets).(63 octets).(63 octets).(61 octets)</code> is legal because the total length is 253 octets (63+1+63+1+63+1+61) and no label exceeds 63 octets.</p> </li> <li> <p> <code>(64 octets).(63 octets).(63 octets).(61 octets)</code> is not legal because the total length exceeds 253 octets (64+1+63+1+63+1+61) and the first label exceeds 63 octets.</p> </li> <li> <p> <code>(63 octets).(63 octets).(63 octets).(62 octets)</code> is not legal because the total length of the DNS name (63+1+63+1+63+1+62) exceeds 253 octets.</p> </li> </ul>",
                        "items": {
                            "maxLength": 253,
                            "minLength": 1,
                            "pattern": "^(\\*\\.)?(((?!-)[A-Za-z0-9-]{0,62}[A-Za-z0-9])\\.)+((?!-)[A-Za-z0-9-]{1,62}[A-Za-z0-9])$",
                            "type": "string"
                        },
                        "maxItems": 100,
                        "minItems": 1,
                        "type": "array"
                    },
                    "ValidationMethod": {
                        "description": "The method you want to use if you are requesting a public certificate to validate that you own or control domain. You can <a href=\"http://docs.aws.amazon.com/acm/latest/userguide/gs-acm-validate-dns.html\">validate with DNS</a> or <a href=\"http://docs.aws.amazon.com/acm/latest/userguide/gs-acm-validate-email.html\">validate with email</a>. We recommend that you use DNS validation. ",
                        "enum": [
                            "EMAIL",
                            "DNS"
                        ],
                        "type": "string"
                    }
                },
                "required": [
                    "DomainName"
                ],
                "type": "object"
            },
            "RequestCertificateResponse": {
                "properties": {
                    "CertificateArn": {
                        "description": "<p>String that contains the ARN of the issued certificate. This must be of the form:</p> <p> <code>arn:aws:acm:us-east-1:123456789012:certificate/12345678-1234-1234-1234-123456789012</code> </p>",
                        "maxLength": 2048,
                        "minLength": 20,
                        "pattern": "arn:[\\w+=/,.@-]+:[\\w+=/,.@-]+:[\\w+=/,.@-]*:[0-9]+:[\\w+=,.@-]+(/[\\w+=,.@-]+)*",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "RequestInProgressException": {
                "description": "The certificate request is in process and the certificate in your account has not yet been issued.",
                "properties": {
                    "message": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "ResendValidationEmailRequest": {
                "properties": {
                    "CertificateArn": {
                        "description": "<p>String that contains the ARN of the requested certificate. The certificate ARN is generated and returned by the <a>RequestCertificate</a> action as soon as the request is made. By default, using this parameter causes email to be sent to all top-level domains you specified in the certificate request. The ARN must be of the form: </p> <p> <code>arn:aws:acm:us-east-1:123456789012:certificate/12345678-1234-1234-1234-123456789012</code> </p>",
                        "maxLength": 2048,
                        "minLength": 20,
                        "pattern": "arn:[\\w+=/,.@-]+:[\\w+=/,.@-]+:[\\w+=/,.@-]*:[0-9]+:[\\w+=,.@-]+(/[\\w+=,.@-]+)*",
                        "type": "string"
                    },
                    "Domain": {
                        "description": "The fully qualified domain name (FQDN) of the certificate that needs to be validated.",
                        "maxLength": 253,
                        "minLength": 1,
                        "pattern": "^(\\*\\.)?(((?!-)[A-Za-z0-9-]{0,62}[A-Za-z0-9])\\.)+((?!-)[A-Za-z0-9-]{1,62}[A-Za-z0-9])$",
                        "type": "string"
                    },
                    "ValidationDomain": {
                        "description": "<p>The base validation domain that will act as the suffix of the email addresses that are used to send the emails. This must be the same as the <code>Domain</code> value or a superdomain of the <code>Domain</code> value. For example, if you requested a certificate for <code>site.subdomain.example.com</code> and specify a <b>ValidationDomain</b> of <code>subdomain.example.com</code>, ACM sends email to the domain registrant, technical contact, and administrative contact in WHOIS and the following five addresses:</p> <ul> <li> <p>admin@subdomain.example.com</p> </li> <li> <p>administrator@subdomain.example.com</p> </li> <li> <p>hostmaster@subdomain.example.com</p> </li> <li> <p>postmaster@subdomain.example.com</p> </li> <li> <p>webmaster@subdomain.example.com</p> </li> </ul>",
                        "maxLength": 253,
                        "minLength": 1,
                        "pattern": "^(\\*\\.)?(((?!-)[A-Za-z0-9-]{0,62}[A-Za-z0-9])\\.)+((?!-)[A-Za-z0-9-]{1,62}[A-Za-z0-9])$",
                        "type": "string"
                    }
                },
                "required": [
                    "CertificateArn",
                    "Domain",
                    "ValidationDomain"
                ],
                "type": "object"
            },
            "ResourceInUseException": {
                "description": "The certificate is in use by another AWS service in the caller's account. Remove the association and try again.",
                "properties": {
                    "message": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "ResourceNotFoundException": {
                "description": "The specified certificate cannot be found in the caller's account or the caller's account cannot be found.",
                "properties": {
                    "message": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "ResourceRecord": {
                "description": "Contains a DNS record value that you can use to can use to validate ownership or control of a domain. This is used by the <a>DescribeCertificate</a> action. ",
                "properties": {
                    "Name": {
                        "description": "The name of the DNS record to create in your domain. This is supplied by ACM.",
                        "type": "string"
                    },
                    "Type": {
                        "description": "The type of DNS record. Currently this can be <code>CNAME</code>.",
                        "enum": [
                            "CNAME"
                        ],
                        "type": "string"
                    },
                    "Value": {
                        "description": "The value of the CNAME record to add to your DNS database. This is supplied by ACM.",
                        "type": "string"
                    }
                },
                "required": [
                    "Name",
                    "Type",
                    "Value"
                ],
                "type": "object"
            },
            "RevocationReason": {
                "enum": [
                    "UNSPECIFIED",
                    "KEY_COMPROMISE",
                    "CA_COMPROMISE",
                    "AFFILIATION_CHANGED",
                    "SUPERCEDED",
                    "CESSATION_OF_OPERATION",
                    "CERTIFICATE_HOLD",
                    "REMOVE_FROM_CRL",
                    "PRIVILEGE_WITHDRAWN",
                    "A_A_COMPROMISE"
                ],
                "type": "string"
            },
            "String": {
                "type": "string"
            },
            "TStamp": {
                "format": "date-time",
                "type": "string"
            },
            "Tag": {
                "description": "A key-value pair that identifies or specifies metadata about an ACM resource.",
                "properties": {
                    "Key": {
                        "description": "The key of the tag.",
                        "maxLength": 128,
                        "minLength": 1,
                        "pattern": "[\\p{L}\\p{Z}\\p{N}_.:\\/=+\\-@]*",
                        "type": "string"
                    },
                    "Value": {
                        "description": "The value of the tag.",
                        "maxLength": 256,
                        "minLength": 0,
                        "pattern": "[\\p{L}\\p{Z}\\p{N}_.:\\/=+\\-@]*",
                        "type": "string"
                    }
                },
                "required": [
                    "Key"
                ],
                "type": "object"
            },
            "TagKey": {
                "maxLength": 128,
                "minLength": 1,
                "pattern": "[\\p{L}\\p{Z}\\p{N}_.:\\/=+\\-@]*",
                "type": "string"
            },
            "TagList": {
                "items": {
                    "description": "A key-value pair that identifies or specifies metadata about an ACM resource.",
                    "properties": {
                        "Key": {
                            "description": "The key of the tag.",
                            "maxLength": 128,
                            "minLength": 1,
                            "pattern": "[\\p{L}\\p{Z}\\p{N}_.:\\/=+\\-@]*",
                            "type": "string"
                        },
                        "Value": {
                            "description": "The value of the tag.",
                            "maxLength": 256,
                            "minLength": 0,
                            "pattern": "[\\p{L}\\p{Z}\\p{N}_.:\\/=+\\-@]*",
                            "type": "string"
                        }
                    },
                    "required": [
                        "Key"
                    ],
                    "type": "object"
                },
                "maxItems": 50,
                "minItems": 1,
                "type": "array"
            },
            "TagValue": {
                "maxLength": 256,
                "minLength": 0,
                "pattern": "[\\p{L}\\p{Z}\\p{N}_.:\\/=+\\-@]*",
                "type": "string"
            },
            "TooManyTagsException": {
                "description": "The request contains too many tags. Try the request again with fewer tags.",
                "properties": {
                    "message": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "UpdateCertificateOptionsRequest": {
                "properties": {
                    "CertificateArn": {
                        "description": "<p>ARN of the requested certificate to update. This must be of the form:</p> <p> <code>arn:aws:acm:us-east-1:<i>account</i>:certificate/<i>12345678-1234-1234-1234-123456789012</i> </code> </p>",
                        "maxLength": 2048,
                        "minLength": 20,
                        "pattern": "arn:[\\w+=/,.@-]+:[\\w+=/,.@-]+:[\\w+=/,.@-]*:[0-9]+:[\\w+=,.@-]+(/[\\w+=,.@-]+)*",
                        "type": "string"
                    },
                    "Options": {
                        "description": "Use to update the options for your certificate. Currently, you can specify whether to add your certificate to a transparency log. Certificate transparency makes it possible to detect SSL/TLS certificates that have been mistakenly or maliciously issued. Certificates that have not been logged typically produce an error message in a browser. ",
                        "properties": {
                            "CertificateTransparencyLoggingPreference": {
                                "description": "You can opt out of certificate transparency logging by specifying the <code>DISABLED</code> option. Opt in by specifying <code>ENABLED</code>. ",
                                "enum": [
                                    "ENABLED",
                                    "DISABLED"
                                ],
                                "type": "string"
                            }
                        },
                        "type": "object"
                    }
                },
                "required": [
                    "CertificateArn",
                    "Options"
                ],
                "type": "object"
            },
            "ValidationEmailList": {
                "items": {
                    "type": "string"
                },
                "type": "array"
            },
            "ValidationMethod": {
                "enum": [
                    "EMAIL",
                    "DNS"
                ],
                "type": "string"
            }
        },
        "parameters": {
            "Action": {
                "in": "query",
                "name": "Action",
                "required": true,
                "schema": {
                    "type": "string"
                }
            },
            "Version": {
                "in": "query",
                "name": "Version",
                "required": true,
                "schema": {
                    "type": "string"
                }
            },
            "X-Amz-Algorithm": {
                "in": "header",
                "name": "X-Amz-Algorithm",
                "required": false,
                "schema": {
                    "type": "string"
                }
            },
            "X-Amz-Content-Sha256": {
                "in": "header",
                "name": "X-Amz-Content-Sha256",
                "required": false,
                "schema": {
                    "type": "string"
                }
            },
            "X-Amz-Credential": {
                "in": "header",
                "name": "X-Amz-Credential",
                "required": false,
                "schema": {
                    "type": "string"
                }
            },
            "X-Amz-Date": {
                "in": "header",
                "name": "X-Amz-Date",
                "required": false,
                "schema": {
                    "type": "string"
                }
            },
            "X-Amz-Security-Token": {
                "in": "header",
                "name": "X-Amz-Security-Token",
                "required": false,
                "schema": {
                    "type": "string"
                }
            },
            "X-Amz-Signature": {
                "in": "header",
                "name": "X-Amz-Signature",
                "required": false,
                "schema": {
                    "type": "string"
                }
            },
            "X-Amz-SignedHeaders": {
                "in": "header",
                "name": "X-Amz-SignedHeaders",
                "required": false,
                "schema": {
                    "type": "string"
                }
            }
        },
        "securitySchemes": {
            "hmac": {
                "description": "Amazon Signature authorization v4",
                "in": "header",
                "name": "Authorization",
                "type": "apiKey",
                "x-amazon-apigateway-authtype": "awsSigv4"
            }
        }
    }
}